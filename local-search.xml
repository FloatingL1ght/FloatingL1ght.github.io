<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>编写年轻人的第一个dll</title>
    <link href="/2022/10/11/%E7%BC%96%E5%86%99%E5%B9%B4%E8%BD%BB%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAdll/"/>
    <url>/2022/10/11/%E7%BC%96%E5%86%99%E5%B9%B4%E8%BD%BB%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAdll/</url>
    
    <content type="html"><![CDATA[<p>前端时间在做Buuoj 上面的NewStar的reverse时找到了一个比较有意思的题目，week1的easyre题，使用了动态链接库，久闻dll大名但是对它的了解仅限于知道名字和用途，今天在学习C++时突然想自己写一个dll，于是有了这篇blog</p><h3 id="C-x2F-C-程序的形成过程"><a href="#C-x2F-C-程序的形成过程" class="headerlink" title="C&#x2F;C++程序的形成过程"></a>C&#x2F;C++程序的形成过程</h3><p>编写好源代码，然后在编译器中按下F5，编译器在帮你做完一系列工作后生成一个exe文件，双击即可运行</p><p>在按下F5后，编译器究竟做了什么，这是我们需要明确的</p><p>在上C语言的第一节课，老师就讲了<strong>预编译-编译-汇编-链接</strong>这个过程</p><p>首先编写一个简单的C程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> type int</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    type a = <span class="hljs-number">10</span>, b = <span class="hljs-number">20</span>;<br>    type sum = a + b;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, sum);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="预编译"><a href="#预编译" class="headerlink" title="预编译"></a>预编译</h4><p>在Linux命令行中输入</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">gcc -E hello.<span class="hljs-keyword">c</span> -o hello.i<br></code></pre></td></tr></table></figure><p>得到一个hello.i文件</p><p>使用vscode打开</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br></pre></td><td class="code"><pre><code class="hljs c"># <span class="hljs-number">1</span> <span class="hljs-string">&quot;hello.c&quot;</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;&lt;built-in&gt;&quot;</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;&lt;command-line&gt;&quot;</span><br># <span class="hljs-number">31</span> <span class="hljs-string">&quot;&lt;command-line&gt;&quot;</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/stdc-predef.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">32</span> <span class="hljs-string">&quot;&lt;command-line&gt;&quot;</span> <span class="hljs-number">2</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;hello.c&quot;</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">27</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/libc-header-start.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">33</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/libc-header-start.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/features.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">461</span> <span class="hljs-string">&quot;/usr/include/features.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/sys/cdefs.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">452</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/sys/cdefs.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/wordsize.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">453</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/sys/cdefs.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/long-double.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">454</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/sys/cdefs.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">462</span> <span class="hljs-string">&quot;/usr/include/features.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">485</span> <span class="hljs-string">&quot;/usr/include/features.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/gnu/stubs.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">10</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/gnu/stubs.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/gnu/stubs-64.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">11</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/gnu/stubs.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">486</span> <span class="hljs-string">&quot;/usr/include/features.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">34</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/libc-header-start.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">28</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br><br><br><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">209</span> <span class="hljs-string">&quot;/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br># <span class="hljs-number">209</span> <span class="hljs-string">&quot;/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-type">size_t</span>;<br># <span class="hljs-number">34</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">40</span> <span class="hljs-string">&quot;/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">typedef</span> __builtin_va_list __gnuc_va_list;<br># <span class="hljs-number">37</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">27</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/wordsize.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">28</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/timesize.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">29</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> __u_char;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> <span class="hljs-type">int</span> __u_short;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> __u_int;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> __u_long;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">signed</span> <span class="hljs-type">char</span> <span class="hljs-type">__int8_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> <span class="hljs-type">__uint8_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">signed</span> <span class="hljs-type">short</span> <span class="hljs-type">int</span> <span class="hljs-type">__int16_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> <span class="hljs-type">int</span> <span class="hljs-type">__uint16_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">signed</span> <span class="hljs-type">int</span> <span class="hljs-type">__int32_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-type">__uint32_t</span>;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">signed</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__int64_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__uint64_t</span>;<br><br><br><br><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__int8_t</span> <span class="hljs-type">__int_least8_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__uint8_t</span> <span class="hljs-type">__uint_least8_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__int16_t</span> <span class="hljs-type">__int_least16_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__uint16_t</span> <span class="hljs-type">__uint_least16_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__int32_t</span> <span class="hljs-type">__int_least32_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__uint32_t</span> <span class="hljs-type">__uint_least32_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__int64_t</span> <span class="hljs-type">__int_least64_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__uint64_t</span> <span class="hljs-type">__uint_least64_t</span>;<br><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__quad_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__u_quad_t</span>;<br><br><br><br><br><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__intmax_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__uintmax_t</span>;<br># <span class="hljs-number">141</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/typesizes.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">142</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/time64.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">143</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__dev_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-type">__uid_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-type">__gid_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__ino_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__ino64_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-type">__mode_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__nlink_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__off_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__off64_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> <span class="hljs-type">__pid_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> &#123;</span> <span class="hljs-type">int</span> __val[<span class="hljs-number">2</span>]; &#125; <span class="hljs-type">__fsid_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__clock_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__rlim_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__rlim64_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-type">__id_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__time_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-type">__useconds_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__suseconds_t</span>;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> <span class="hljs-type">__daddr_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> <span class="hljs-type">__key_t</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> <span class="hljs-type">__clockid_t</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">void</span> * <span class="hljs-type">__timer_t</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__blksize_t</span>;<br><br><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__blkcnt_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__blkcnt64_t</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__fsblkcnt_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__fsblkcnt64_t</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__fsfilcnt_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__fsfilcnt64_t</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__fsword_t</span>;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__ssize_t</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__syscall_slong_t</span>;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__syscall_ulong_t</span>;<br><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__off64_t</span> <span class="hljs-type">__loff_t</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">char</span> *<span class="hljs-type">__caddr_t</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-type">__intptr_t</span>;<br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> <span class="hljs-type">__socklen_t</span>;<br><br><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">int</span> <span class="hljs-type">__sig_atomic_t</span>;<br># <span class="hljs-number">39</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br><br><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">13</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">int</span> __count;<br>  <span class="hljs-class"><span class="hljs-keyword">union</span></span><br><span class="hljs-class">  &#123;</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> __wch;<br>    <span class="hljs-type">char</span> __wchb[<span class="hljs-number">4</span>];<br>  &#125; __value;<br>&#125; <span class="hljs-type">__mbstate_t</span>;<br># <span class="hljs-number">6</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">G_fpos_t</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">__off_t</span> __pos;<br>  <span class="hljs-type">__mbstate_t</span> __state;<br>&#125; <span class="hljs-type">__fpos_t</span>;<br># <span class="hljs-number">40</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">10</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">G_fpos64_t</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">__off64_t</span> __pos;<br>  <span class="hljs-type">__mbstate_t</span> __state;<br>&#125; <span class="hljs-type">__fpos64_t</span>;<br># <span class="hljs-number">41</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/__FILE.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span>;</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span> __<span class="hljs-title">FILE</span>;</span><br># <span class="hljs-number">42</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/FILE.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span>;</span><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span> <span class="hljs-title">FILE</span>;</span><br># <span class="hljs-number">43</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">35</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span>;</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_marker</span>;</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_codecvt</span>;</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_wide_data</span>;</span><br><br><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">void</span> _IO_lock_t;<br><br><br><br><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">int</span> _flags;<br><br><br>  <span class="hljs-type">char</span> *_IO_read_ptr;<br>  <span class="hljs-type">char</span> *_IO_read_end;<br>  <span class="hljs-type">char</span> *_IO_read_base;<br>  <span class="hljs-type">char</span> *_IO_write_base;<br>  <span class="hljs-type">char</span> *_IO_write_ptr;<br>  <span class="hljs-type">char</span> *_IO_write_end;<br>  <span class="hljs-type">char</span> *_IO_buf_base;<br>  <span class="hljs-type">char</span> *_IO_buf_end;<br><br><br>  <span class="hljs-type">char</span> *_IO_save_base;<br>  <span class="hljs-type">char</span> *_IO_backup_base;<br>  <span class="hljs-type">char</span> *_IO_save_end;<br><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_marker</span> *_<span class="hljs-title">markers</span>;</span><br><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span> *_<span class="hljs-title">chain</span>;</span><br><br>  <span class="hljs-type">int</span> _fileno;<br>  <span class="hljs-type">int</span> _flags2;<br>  <span class="hljs-type">__off_t</span> _old_offset;<br><br><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> _cur_column;<br>  <span class="hljs-type">signed</span> <span class="hljs-type">char</span> _vtable_offset;<br>  <span class="hljs-type">char</span> _shortbuf[<span class="hljs-number">1</span>];<br><br>  _IO_lock_t *_lock;<br><br><br><br><br><br><br><br>  <span class="hljs-type">__off64_t</span> _offset;<br><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_codecvt</span> *_<span class="hljs-title">codecvt</span>;</span><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_wide_data</span> *_<span class="hljs-title">wide_data</span>;</span><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span> *_<span class="hljs-title">freeres_list</span>;</span><br>  <span class="hljs-type">void</span> *_freeres_buf;<br>  <span class="hljs-type">size_t</span> __pad5;<br>  <span class="hljs-type">int</span> _mode;<br><br>  <span class="hljs-type">char</span> _unused2[<span class="hljs-number">15</span> * <span class="hljs-keyword">sizeof</span> (<span class="hljs-type">int</span>) - <span class="hljs-number">4</span> * <span class="hljs-keyword">sizeof</span> (<span class="hljs-type">void</span> *) - <span class="hljs-keyword">sizeof</span> (<span class="hljs-type">size_t</span>)];<br>&#125;;<br># <span class="hljs-number">44</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">52</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">typedef</span> __gnuc_va_list va_list;<br># <span class="hljs-number">63</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__off_t</span> <span class="hljs-type">off_t</span>;<br># <span class="hljs-number">77</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__ssize_t</span> <span class="hljs-type">ssize_t</span>;<br><br><br><br><br><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">__fpos_t</span> <span class="hljs-type">fpos_t</span>;<br># <span class="hljs-number">133</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/stdio_lim.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">134</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br><br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-built_in">stdin</span>;<br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-built_in">stdout</span>;<br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-built_in">stderr</span>;<br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">remove</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__filename)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">rename</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__old, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__new)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">renameat</span> <span class="hljs-params">(<span class="hljs-type">int</span> __oldfd, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__old, <span class="hljs-type">int</span> __newfd,</span><br><span class="hljs-params">       <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__new)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br># <span class="hljs-number">173</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-title function_">tmpfile</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span> ;<br># <span class="hljs-number">187</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">char</span> *<span class="hljs-title function_">tmpnam</span> <span class="hljs-params">(<span class="hljs-type">char</span> *__s)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">char</span> *<span class="hljs-title function_">tmpnam_r</span> <span class="hljs-params">(<span class="hljs-type">char</span> *__s)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br># <span class="hljs-number">204</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">char</span> *<span class="hljs-title function_">tempnam</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__dir, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__pfx)</span><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__malloc__))</span> ;<br><br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fclose</span> <span class="hljs-params">(FILE *__stream)</span>;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fflush</span> <span class="hljs-params">(FILE *__stream)</span>;<br># <span class="hljs-number">227</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fflush_unlocked</span> <span class="hljs-params">(FILE *__stream)</span>;<br># <span class="hljs-number">246</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-title function_">fopen</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __filename,</span><br><span class="hljs-params">      <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __modes)</span> ;<br><br><br><br><br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-title function_">freopen</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __filename,</span><br><span class="hljs-params">        <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __modes,</span><br><span class="hljs-params">        FILE *__restrict __stream)</span> ;<br># <span class="hljs-number">279</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-title function_">fdopen</span> <span class="hljs-params">(<span class="hljs-type">int</span> __fd, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__modes)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br># <span class="hljs-number">292</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-title function_">fmemopen</span> <span class="hljs-params">(<span class="hljs-type">void</span> *__s, <span class="hljs-type">size_t</span> __len, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__modes)</span><br>  __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br><br><br><br><br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-title function_">open_memstream</span> <span class="hljs-params">(<span class="hljs-type">char</span> **__bufloc, <span class="hljs-type">size_t</span> *__sizeloc)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">setbuf</span> <span class="hljs-params">(FILE *__restrict __stream, <span class="hljs-type">char</span> *__restrict __buf)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">setvbuf</span> <span class="hljs-params">(FILE *__restrict __stream, <span class="hljs-type">char</span> *__restrict __buf,</span><br><span class="hljs-params">      <span class="hljs-type">int</span> __modes, <span class="hljs-type">size_t</span> __n)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">setbuffer</span> <span class="hljs-params">(FILE *__restrict __stream, <span class="hljs-type">char</span> *__restrict __buf,</span><br><span class="hljs-params">         <span class="hljs-type">size_t</span> __size)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">setlinebuf</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fprintf</span> <span class="hljs-params">(FILE *__restrict __stream,</span><br><span class="hljs-params">      <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span>;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">printf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span>;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sprintf</span> <span class="hljs-params">(<span class="hljs-type">char</span> *__restrict __s,</span><br><span class="hljs-params">      <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__))</span>;<br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vfprintf</span> <span class="hljs-params">(FILE *__restrict __s, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format,</span><br><span class="hljs-params">       __gnuc_va_list __arg)</span>;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vprintf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, __gnuc_va_list __arg)</span>;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vsprintf</span> <span class="hljs-params">(<span class="hljs-type">char</span> *__restrict __s, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format,</span><br><span class="hljs-params">       __gnuc_va_list __arg)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__))</span>;<br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">snprintf</span> <span class="hljs-params">(<span class="hljs-type">char</span> *__restrict __s, <span class="hljs-type">size_t</span> __maxlen,</span><br><span class="hljs-params">       <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__))</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__printf__, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>)))</span>;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vsnprintf</span> <span class="hljs-params">(<span class="hljs-type">char</span> *__restrict __s, <span class="hljs-type">size_t</span> __maxlen,</span><br><span class="hljs-params">        <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, __gnuc_va_list __arg)</span><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__))</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__printf__, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>)))</span>;<br># <span class="hljs-number">379</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vdprintf</span> <span class="hljs-params">(<span class="hljs-type">int</span> __fd, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __fmt,</span><br><span class="hljs-params">       __gnuc_va_list __arg)</span><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__printf__, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)))</span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">dprintf</span> <span class="hljs-params">(<span class="hljs-type">int</span> __fd, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __fmt, ...)</span><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__printf__, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>)))</span>;<br><br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fscanf</span> <span class="hljs-params">(FILE *__restrict __stream,</span><br><span class="hljs-params">     <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span> ;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">scanf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span> ;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sscanf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __s,</span><br><span class="hljs-params">     <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fscanf</span> <span class="hljs-params">(FILE *__restrict __stream, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span> __<span class="hljs-title function_">asm__</span> <span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;__isoc99_fscanf&quot;</span>)</span><br><br>                               ;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">scanf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span> __<span class="hljs-title function_">asm__</span> <span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;__isoc99_scanf&quot;</span>)</span><br>                              ;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sscanf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __s, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, ...)</span> __<span class="hljs-title function_">asm__</span> <span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;__isoc99_sscanf&quot;</span>)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span><br><br>                      ;<br># <span class="hljs-number">432</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vfscanf</span> <span class="hljs-params">(FILE *__restrict __s, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format,</span><br><span class="hljs-params">      __gnuc_va_list __arg)</span><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__scanf__, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)))</span> ;<br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vscanf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, __gnuc_va_list __arg)</span><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__scanf__, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)))</span> ;<br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vsscanf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __s,</span><br><span class="hljs-params">      <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, __gnuc_va_list __arg)</span><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__scanf__, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)))</span>;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vfscanf</span> <span class="hljs-params">(FILE *__restrict __s, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, __gnuc_va_list __arg)</span> __<span class="hljs-title function_">asm__</span> <span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;__isoc99_vfscanf&quot;</span>)</span><br><br><br><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__scanf__, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)))</span> ;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vscanf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, __gnuc_va_list __arg)</span> __<span class="hljs-title function_">asm__</span> <span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;__isoc99_vscanf&quot;</span>)</span><br><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__scanf__, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)))</span> ;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">vsscanf</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __s, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __format, __gnuc_va_list __arg)</span> __<span class="hljs-title function_">asm__</span> <span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;__isoc99_vsscanf&quot;</span>)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span><br><br><br><br>     __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__format__ (__scanf__, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)))</span>;<br># <span class="hljs-number">485</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fgetc</span> <span class="hljs-params">(FILE *__stream)</span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getc</span> <span class="hljs-params">(FILE *__stream)</span>;<br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getchar</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getc_unlocked</span> <span class="hljs-params">(FILE *__stream)</span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getchar_unlocked</span> <span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br># <span class="hljs-number">510</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fgetc_unlocked</span> <span class="hljs-params">(FILE *__stream)</span>;<br># <span class="hljs-number">521</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fputc</span> <span class="hljs-params">(<span class="hljs-type">int</span> __c, FILE *__stream)</span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">putc</span> <span class="hljs-params">(<span class="hljs-type">int</span> __c, FILE *__stream)</span>;<br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">putchar</span> <span class="hljs-params">(<span class="hljs-type">int</span> __c)</span>;<br># <span class="hljs-number">537</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fputc_unlocked</span> <span class="hljs-params">(<span class="hljs-type">int</span> __c, FILE *__stream)</span>;<br><br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">putc_unlocked</span> <span class="hljs-params">(<span class="hljs-type">int</span> __c, FILE *__stream)</span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">putchar_unlocked</span> <span class="hljs-params">(<span class="hljs-type">int</span> __c)</span>;<br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getw</span> <span class="hljs-params">(FILE *__stream)</span>;<br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">putw</span> <span class="hljs-params">(<span class="hljs-type">int</span> __w, FILE *__stream)</span>;<br><br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">char</span> *<span class="hljs-title function_">fgets</span> <span class="hljs-params">(<span class="hljs-type">char</span> *__restrict __s, <span class="hljs-type">int</span> __n, FILE *__restrict __stream)</span><br>     ;<br># <span class="hljs-number">603</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">__ssize_t</span> __getdelim (<span class="hljs-type">char</span> **__restrict __lineptr,<br>                             <span class="hljs-type">size_t</span> *__restrict __n, <span class="hljs-type">int</span> __delimiter,<br>                             FILE *__restrict __stream) ;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">__ssize_t</span> <span class="hljs-title function_">getdelim</span> <span class="hljs-params">(<span class="hljs-type">char</span> **__restrict __lineptr,</span><br><span class="hljs-params">                           <span class="hljs-type">size_t</span> *__restrict __n, <span class="hljs-type">int</span> __delimiter,</span><br><span class="hljs-params">                           FILE *__restrict __stream)</span> ;<br><br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">__ssize_t</span> <span class="hljs-title function_">getline</span> <span class="hljs-params">(<span class="hljs-type">char</span> **__restrict __lineptr,</span><br><span class="hljs-params">                          <span class="hljs-type">size_t</span> *__restrict __n,</span><br><span class="hljs-params">                          FILE *__restrict __stream)</span> ;<br><br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fputs</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__restrict __s, FILE *__restrict __stream)</span>;<br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">puts</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__s)</span>;<br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">ungetc</span> <span class="hljs-params">(<span class="hljs-type">int</span> __c, FILE *__stream)</span>;<br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">size_t</span> <span class="hljs-title function_">fread</span> <span class="hljs-params">(<span class="hljs-type">void</span> *__restrict __ptr, <span class="hljs-type">size_t</span> __size,</span><br><span class="hljs-params">       <span class="hljs-type">size_t</span> __n, FILE *__restrict __stream)</span> ;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">size_t</span> <span class="hljs-title function_">fwrite</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">void</span> *__restrict __ptr, <span class="hljs-type">size_t</span> __size,</span><br><span class="hljs-params">        <span class="hljs-type">size_t</span> __n, FILE *__restrict __s)</span>;<br># <span class="hljs-number">673</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">size_t</span> <span class="hljs-title function_">fread_unlocked</span> <span class="hljs-params">(<span class="hljs-type">void</span> *__restrict __ptr, <span class="hljs-type">size_t</span> __size,</span><br><span class="hljs-params">         <span class="hljs-type">size_t</span> __n, FILE *__restrict __stream)</span> ;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">size_t</span> <span class="hljs-title function_">fwrite_unlocked</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">void</span> *__restrict __ptr, <span class="hljs-type">size_t</span> __size,</span><br><span class="hljs-params">          <span class="hljs-type">size_t</span> __n, FILE *__restrict __stream)</span>;<br><br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fseek</span> <span class="hljs-params">(FILE *__stream, <span class="hljs-type">long</span> <span class="hljs-type">int</span> __off, <span class="hljs-type">int</span> __whence)</span>;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> <span class="hljs-title function_">ftell</span> <span class="hljs-params">(FILE *__stream)</span> ;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">rewind</span> <span class="hljs-params">(FILE *__stream)</span>;<br># <span class="hljs-number">707</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fseeko</span> <span class="hljs-params">(FILE *__stream, <span class="hljs-type">__off_t</span> __off, <span class="hljs-type">int</span> __whence)</span>;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">__off_t</span> <span class="hljs-title function_">ftello</span> <span class="hljs-params">(FILE *__stream)</span> ;<br># <span class="hljs-number">731</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fgetpos</span> <span class="hljs-params">(FILE *__restrict __stream, <span class="hljs-type">fpos_t</span> *__restrict __pos)</span>;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fsetpos</span> <span class="hljs-params">(FILE *__stream, <span class="hljs-type">const</span> <span class="hljs-type">fpos_t</span> *__pos)</span>;<br># <span class="hljs-number">757</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">clearerr</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">feof</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">ferror</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">clearerr_unlocked</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">feof_unlocked</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">ferror_unlocked</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br><br><br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">perror</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__s)</span>;<br><br><br><br><br><br># <span class="hljs-number">1</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/sys_errlist.h&quot;</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br># <span class="hljs-number">26</span> <span class="hljs-string">&quot;/usr/include/x86_64-linux-gnu/bits/sys_errlist.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> sys_nerr;<br><span class="hljs-keyword">extern</span> <span class="hljs-type">const</span> <span class="hljs-type">char</span> *<span class="hljs-type">const</span> sys_errlist[];<br># <span class="hljs-number">782</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fileno</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fileno_unlocked</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br># <span class="hljs-number">800</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> FILE *<span class="hljs-title function_">popen</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *__command, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *__modes)</span> ;<br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">pclose</span> <span class="hljs-params">(FILE *__stream)</span>;<br><br><br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">char</span> *<span class="hljs-title function_">ctermid</span> <span class="hljs-params">(<span class="hljs-type">char</span> *__s)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br># <span class="hljs-number">840</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">flockfile</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br><br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> <span class="hljs-title function_">ftrylockfile</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span> ;<br><br><br><span class="hljs-keyword">extern</span> <span class="hljs-type">void</span> <span class="hljs-title function_">funlockfile</span> <span class="hljs-params">(FILE *__stream)</span> __<span class="hljs-title function_">attribute__</span> <span class="hljs-params">((__nothrow__ , __leaf__))</span>;<br># <span class="hljs-number">858</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> __uflow (FILE *);<br><span class="hljs-keyword">extern</span> <span class="hljs-type">int</span> __overflow (FILE *, <span class="hljs-type">int</span>);<br># <span class="hljs-number">873</span> <span class="hljs-string">&quot;/usr/include/stdio.h&quot;</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span><br><br># <span class="hljs-number">2</span> <span class="hljs-string">&quot;hello.c&quot;</span> <span class="hljs-number">2</span><br><br><br># <span class="hljs-number">3</span> <span class="hljs-string">&quot;hello.c&quot;</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a = <span class="hljs-number">10</span>, b = <span class="hljs-number">20</span>;<br>    <span class="hljs-type">int</span> sum = a + b;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, sum);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>预编译的主要作用：</p><p>处理关于 “#” 的指令</p><p>【1】删除#define，展开所有宏定义。例#define portnumber 3333</p><p>【2】处理条件预编译 #if, #ifdef, #if, #elif,#endif</p><p>【3】处理“#include”预编译指令，将包含的“.h”文件插入对应位置。这可是递归进行的，文件内可能包含其他“.h”文件。</p><p>【4】删除所有注释。&#x2F;**&#x2F;，&#x2F;&#x2F;。</p><p>【5】添加行号和文件标识符。用于显示调试信息：错误或警告的位置。</p><p>【6】保留#pragma编译器指令。（1）设定编译器状态，（2）指示编译器完成一些特定的动作。</p><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">gcc -s hello.<span class="hljs-keyword">c</span> -o hello.s<br></code></pre></td></tr></table></figure><p>在ida中打开.s文件如图</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20221011213721812.png" alt="image-20221011213721812"></p><p>主要作用：1.扫描（词法分析），2.语法分析，3.语义分析，4.源代码优化（中间语言生成），5.代码生成，目标代码优化。</p><p>【1】将源代码程序输入扫描器，将源代码的字符序列分割成一系列记号。例array[index] &#x3D;  (index + 4) * (2 + 6);</p><p>【2】基于词法分析得到的一系列记号，生成语法树。</p><p>【3】由语义分析器完成，指示判断是否合法，并不判断对错。又分静态语义：隐含浮点型到整形的转换，会报warning，</p><p>  动态语义：在运行时才能确定：例1除以3</p><p>【4】中间代码（语言）使得编译器分为前端和后端，前端产生与机器（或环境）无关的中间代码，编译器的后端将中间代码转换为目标机器代码，目的：一个前端对多个后端，适应不同平台。</p><p>【5】编译器后端主要包括：代码生成器:依赖于目标机器，依赖目标机器的不同字长，寄存器，数据类型等</p><p>目标代码优化器:选择合适的寻址方式，左移右移代替乘除，删除多余指令。</p><h4 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h4><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">gcc -<span class="hljs-keyword">c</span> hello.<span class="hljs-keyword">c</span> -o hello.o<br></code></pre></td></tr></table></figure><p>生成的.o文件在ida中打开如图</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20221011213805578.png" alt="image-20221011213805578"></p><p>主要作用：汇编器是将汇编代码转变成可以执行的指令，生成 目标文件。</p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">gcc</span> hello.o -o hello<br></code></pre></td></tr></table></figure><p>最后的hello文件在ida中打开如图，可以看到地址的变化</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20221011213919940.png" alt="image-20221011213919940"></p><p>主要作用：确定目标文件的地址和空间</p><p>链接过程主要包括：地址和空间的分配，符号决议和重定位。</p><p>符号决议：也可以说地址绑定，分动态链接和静态链接，</p><p>重定位：假设此时又两个文件：A，B。A需要B中的某个函数mov的地址，未链接前将地址置为0，当A与B链接后修改目标地址，完成重定位。</p><h3 id="链接的方式"><a href="#链接的方式" class="headerlink" title="链接的方式"></a>链接的方式</h3><p><a href="https://blog.csdn.net/kang___xi/article/details/80210717">(4条消息) 深入浅出静态链接和动态链接_kang___xi的博客-CSDN博客_动态链接和静态链接</a></p><p>链接主要是分为<strong>静态链接和动态链接</strong>两种方式</p><p>动态链接能够显著的减少代码的重复，而且可以很方便的更新迭代</p><p>假设现在有两个程序program1.o和program2.o，这两者共用同一个库lib.o,假设首先运行程序program1，系统首先加载program1.o，当系统发现program1.o中用到了lib.o，即program1.o依赖于lib.o，那么系统接着加载lib.o，如果program1.o和lib.o还依赖于其他目标文件，则依次全部加载到内存中。当program2运行时，同样的加载program2.o，然后发现program2.o依赖于lib.o，但是此时lib.o已经存在于内存中，这个时候就不再进行重新加载，而是将内存中已经存在的lib.o映射到program2的虚拟地址空间中，从而进行链接（这个链接过程和静态链接类似）形成可执行程序。</p><h3 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h3><p>首先在vs中新建一个dll文件</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20221011214453356.png" alt="image-20221011214453356"></p><p>然后vs会提前准备好这些文件</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20221011214539726.png" alt="image-20221011214539726"></p><p>其中的dllmain.cpp是编写动态链接库函数的地方，pch.h引用了framework.h这个头文件，而后者基本上只起到一个引用windows.h头文件的作用，只是移除了很少的一部分东西</p><p>dllmain.cpp文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;pch.h&quot;</span></span><br><br><span class="hljs-function">BOOL APIENTRY <span class="hljs-title">DllMain</span><span class="hljs-params">( HMODULE hModule,             <span class="hljs-comment">//一个指向自己的句柄</span></span></span><br><span class="hljs-params"><span class="hljs-function">                       DWORD  ul_reason_for_call,   <span class="hljs-comment">//说明dll被调用原因的标志</span></span></span><br><span class="hljs-params"><span class="hljs-function">                       LPVOID lpReserved            <span class="hljs-comment">//保留参数</span></span></span><br><span class="hljs-params"><span class="hljs-function">                     )</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:    <span class="hljs-comment">//进程被调用</span><br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:     <span class="hljs-comment">//线程被调用</span><br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:     <span class="hljs-comment">//进程被停止</span><br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:    <span class="hljs-comment">//线程被停止</span><br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br></code></pre></td></tr></table></figure><p>编写时只需要在最后加上想要的函数即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;pch.h&quot;</span></span><br><br><span class="hljs-function">BOOL APIENTRY <span class="hljs-title">DllMain</span><span class="hljs-params">( HMODULE hModule,             <span class="hljs-comment">//一个指向自己的句柄</span></span></span><br><span class="hljs-params"><span class="hljs-function">                       DWORD  ul_reason_for_call,   <span class="hljs-comment">//说明dll被调用原因的标志</span></span></span><br><span class="hljs-params"><span class="hljs-function">                       LPVOID lpReserved            <span class="hljs-comment">//保留参数</span></span></span><br><span class="hljs-params"><span class="hljs-function">                     )</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:    <span class="hljs-comment">//进程被调用</span><br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:     <span class="hljs-comment">//线程被调用</span><br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:     <span class="hljs-comment">//进程被停止</span><br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:    <span class="hljs-comment">//线程被停止</span><br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> (a + b);<br>&#125;<br><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">sub</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> (a - b);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>__ declspec（dllexport）：</strong><br>将一个函数声名为导出函数，就是说这个函数要被其他程序调用，即作为DLL的一个对外函数接口。通常它和extern“C”合用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span><br>&#123;<br>     __declspec(dllexport) <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">FUNCTION</span><span class="hljs-params">()</span></span><br><span class="hljs-function">    </span>&#123; <br> <br>    &#125; <br>&#125; <br></code></pre></td></tr></table></figure><p>由于在制作DLL导出函数时由于C ++存在函数重载，因此__declspec（dllexport）FUNCTION（int，int）在DLL会被装饰，例如被装饰成为function_int_int，而且不同的编译器decorate的方法不同，造成了在用GetProcAddress的的取得FUNCTION地址时的不便，使用外部的“C”时，上述的装饰不会发生，因为ç没有函数重载，如此一来被外部的“C”修饰的函数，就不具备重载能力。</p><p>编写好之后F5一下，dll就生成了，接下来就是如何调用</p><p>C++调用dll的方式主要有<strong>静态调用</strong>和<strong>动态调用</strong>两种</p><p>静态调用</p><p>方式是通过<strong>链接器将DLL函数的导出函数写进可执行文件</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> comment(lib,<span class="hljs-string">&quot;Dll1.lib&quot;</span>)</span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span>_declspec(dllimport) <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span></span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span>_declspec(dllimport) <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">sub</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> a = <span class="hljs-number">9</span>;<br>    <span class="hljs-type">int</span> b = <span class="hljs-number">3</span>;<br>    <span class="hljs-type">int</span> nAdd = <span class="hljs-built_in">add</span>(a, b);<br>    <span class="hljs-type">int</span> nSub = <span class="hljs-built_in">sub</span>(a, b);<br>    std::cout &lt;&lt; nAdd &lt;&lt; <span class="hljs-string">&quot;:&quot;</span> &lt;&lt; nSub &lt;&lt; std::endl;<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;pause&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>动态调用</p><p>动态调用不是链接时完成的，<strong>而是在运行时完成的。动态调用不会在可执行文件中写入DLL相关的信息</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">typedef</span> <span class="hljs-title">int</span> <span class="hljs-params">(*_pAdd)</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">typedef</span> <span class="hljs-title">int</span> <span class="hljs-params">(*_pSub)</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span></span>;<br>HINSTANCE hDll = <span class="hljs-built_in">LoadLibraryA</span>(<span class="hljs-built_in">LPCSTR</span>(<span class="hljs-string">&quot;Dll1.dll&quot;</span>));<br><span class="hljs-keyword">if</span> (hDll == <span class="hljs-number">0</span>)<br>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;Dll 打开失败&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>, b = <span class="hljs-number">5</span>;<br>_pAdd pAdd = (_pAdd)<span class="hljs-built_in">GetProcAddress</span>(hDll, <span class="hljs-string">&quot;add&quot;</span>);<br>_pSub pSub = (_pSub)<span class="hljs-built_in">GetProcAddress</span>(hDll, <span class="hljs-string">&quot;sub&quot;</span>);<br><span class="hljs-type">int</span> sum = <span class="hljs-built_in">pAdd</span>(a, b);<br><span class="hljs-type">int</span> Sub = <span class="hljs-built_in">pSub</span>(a, b);<br>cout &lt;&lt; sum &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; Sub &lt;&lt; endl;<br><span class="hljs-built_in">FreeLibrary</span>(hDll);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>调用了一下两个常用API</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 根据DLL文件名 加载DLL</span><br><span class="hljs-comment">// 返回一个模块句柄</span><br><span class="hljs-function">HMODULE WINAPI <span class="hljs-title">LoadLibrary</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">  _In_ LPCTSTR lpFileName</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span>;<br><span class="hljs-comment">// 返回lpProcName指向的函数名的函数地址。</span><br><span class="hljs-function">FARPROC <span class="hljs-title">GetProcAddress</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">  HMODULE hModule,</span></span><br><span class="hljs-params"><span class="hljs-function">  LPCSTR  lpProcName</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span>;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2022网鼎杯 re693</title>
    <link href="/2022/10/09/2022%E7%BD%91%E9%BC%8E%E6%9D%AF-re693/"/>
    <url>/2022/10/09/2022%E7%BD%91%E9%BC%8E%E6%9D%AF-re693/</url>
    
    <content type="html"><![CDATA[<h1 id="2022网鼎杯re693"><a href="#2022网鼎杯re693" class="headerlink" title="2022网鼎杯re693"></a>2022网鼎杯re693</h1><p>文件是go源码，直接在goland中打开，运行，根据输出提示来解题</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220829122400709.png" alt="image-20220829122400709"></p><h2 id="根据提示"><a href="#根据提示" class="headerlink" title="根据提示"></a>根据提示</h2><p>找到两个函数，第一个函数是有六个参数，并且第三个参数名为<code>gLIhR</code>的函数</p><p>是<code>ZlXDJkH3OZN4Mayd</code></p><p>第二个函数是有三个调用并且调用名为<code>cHZv5op8rOmlAkb6</code></p><p>一个一个找，找到满足只有六处引用的函数</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220829122655568.png" alt="image-20220829122655568"></p><p>就是<code>UhnCm82SDGE0zLYO</code></p><h2 id="然后查看主函数"><a href="#然后查看主函数" class="headerlink" title="然后查看主函数"></a>然后查看主函数</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>    <span class="hljs-keyword">var</span> nFAzj, CuSkl <span class="hljs-type">string</span><br>    jjxXf := []<span class="hljs-type">byte</span>&#123;<br>        <span class="hljs-number">37</span>, <span class="hljs-number">73</span>, <span class="hljs-number">151</span>, <span class="hljs-number">135</span>, <span class="hljs-number">65</span>, <span class="hljs-number">58</span>, <span class="hljs-number">241</span>, <span class="hljs-number">90</span>, <span class="hljs-number">33</span>, <span class="hljs-number">86</span>, <span class="hljs-number">71</span>, <span class="hljs-number">41</span>, <span class="hljs-number">102</span>, <span class="hljs-number">241</span>, <span class="hljs-number">213</span>, <span class="hljs-number">234</span>, <span class="hljs-number">67</span>, <span class="hljs-number">144</span>, <span class="hljs-number">139</span>, <span class="hljs-number">20</span>, <span class="hljs-number">112</span>, <span class="hljs-number">150</span>, <span class="hljs-number">41</span>, <span class="hljs-number">7</span>, <span class="hljs-number">158</span>, <span class="hljs-number">251</span>, <span class="hljs-number">167</span>, <span class="hljs-number">249</span>, <span class="hljs-number">24</span>, <span class="hljs-number">129</span>, <span class="hljs-number">72</span>, <span class="hljs-number">64</span>, <span class="hljs-number">83</span>, <span class="hljs-number">142</span>, <span class="hljs-number">166</span>, <span class="hljs-number">236</span>, <span class="hljs-number">67</span>, <span class="hljs-number">18</span>, <span class="hljs-number">211</span>, <span class="hljs-number">100</span>, <span class="hljs-number">91</span>, <span class="hljs-number">38</span>, <span class="hljs-number">83</span>, <span class="hljs-number">147</span>, <span class="hljs-number">40</span>, <span class="hljs-number">78</span>, <span class="hljs-number">239</span>, <span class="hljs-number">113</span>, <span class="hljs-number">232</span>, <span class="hljs-number">83</span>, <span class="hljs-number">227</span>, <span class="hljs-number">47</span>, <span class="hljs-number">192</span>, <span class="hljs-number">227</span>, <span class="hljs-number">70</span>, <span class="hljs-number">167</span>, <span class="hljs-number">201</span>, <span class="hljs-number">249</span>, <span class="hljs-number">156</span>, <span class="hljs-number">101</span>, <span class="hljs-number">216</span>, <span class="hljs-number">159</span>, <span class="hljs-number">116</span>, <span class="hljs-number">210</span>, <span class="hljs-number">152</span>, <span class="hljs-number">234</span>, <span class="hljs-number">38</span>, <span class="hljs-number">145</span>, <span class="hljs-number">198</span>, <span class="hljs-number">58</span>, <span class="hljs-number">24</span>, <span class="hljs-number">183</span>, <span class="hljs-number">72</span>, <span class="hljs-number">143</span>, <span class="hljs-number">136</span>, <span class="hljs-number">234</span>, <span class="hljs-number">246</span>&#125;<br>    KdlaH := []<span class="hljs-type">byte</span>&#123;<br>        <span class="hljs-number">191</span>, <span class="hljs-number">140</span>, <span class="hljs-number">114</span>, <span class="hljs-number">245</span>, <span class="hljs-number">142</span>, <span class="hljs-number">55</span>, <span class="hljs-number">190</span>, <span class="hljs-number">30</span>, <span class="hljs-number">161</span>, <span class="hljs-number">18</span>, <span class="hljs-number">200</span>, <span class="hljs-number">7</span>, <span class="hljs-number">21</span>, <span class="hljs-number">59</span>, <span class="hljs-number">17</span>, <span class="hljs-number">44</span>, <span class="hljs-number">34</span>, <span class="hljs-number">181</span>, <span class="hljs-number">109</span>, <span class="hljs-number">116</span>, <span class="hljs-number">146</span>, <span class="hljs-number">145</span>, <span class="hljs-number">189</span>, <span class="hljs-number">68</span>, <span class="hljs-number">142</span>, <span class="hljs-number">113</span>, <span class="hljs-number">0</span>, <span class="hljs-number">33</span>, <span class="hljs-number">46</span>, <span class="hljs-number">184</span>, <span class="hljs-number">21</span>, <span class="hljs-number">33</span>, <span class="hljs-number">66</span>, <span class="hljs-number">99</span>, <span class="hljs-number">124</span>, <span class="hljs-number">167</span>, <span class="hljs-number">201</span>, <span class="hljs-number">88</span>, <span class="hljs-number">133</span>, <span class="hljs-number">20</span>, <span class="hljs-number">211</span>, <span class="hljs-number">67</span>, <span class="hljs-number">133</span>, <span class="hljs-number">250</span>, <span class="hljs-number">62</span>, <span class="hljs-number">28</span>, <span class="hljs-number">138</span>, <span class="hljs-number">229</span>, <span class="hljs-number">105</span>, <span class="hljs-number">102</span>, <span class="hljs-number">125</span>, <span class="hljs-number">124</span>, <span class="hljs-number">208</span>, <span class="hljs-number">180</span>, <span class="hljs-number">50</span>, <span class="hljs-number">146</span>, <span class="hljs-number">67</span>, <span class="hljs-number">39</span>, <span class="hljs-number">55</span>, <span class="hljs-number">240</span>, <span class="hljs-number">239</span>, <span class="hljs-number">203</span>, <span class="hljs-number">230</span>, <span class="hljs-number">142</span>, <span class="hljs-number">20</span>, <span class="hljs-number">90</span>, <span class="hljs-number">205</span>, <span class="hljs-number">27</span>, <span class="hljs-number">128</span>, <span class="hljs-number">136</span>, <span class="hljs-number">151</span>, <span class="hljs-number">140</span>, <span class="hljs-number">222</span>, <span class="hljs-number">92</span>, <span class="hljs-number">152</span>, <span class="hljs-number">1</span>, <span class="hljs-number">222</span>, <span class="hljs-number">138</span>, <span class="hljs-number">254</span>, <span class="hljs-number">246</span>, <span class="hljs-number">223</span>, <span class="hljs-number">224</span>, <span class="hljs-number">236</span>, <span class="hljs-number">33</span>, <span class="hljs-number">60</span>, <span class="hljs-number">170</span>, <span class="hljs-number">189</span>, <span class="hljs-number">77</span>, <span class="hljs-number">124</span>, <span class="hljs-number">72</span>, <span class="hljs-number">135</span>, <span class="hljs-number">46</span>, <span class="hljs-number">235</span>, <span class="hljs-number">17</span>, <span class="hljs-number">32</span>, <span class="hljs-number">28</span>, <span class="hljs-number">245</span>&#125;<br>    fmt.Print(MPyt9GWTRfAFNvb1(jjxXf))<br>    fmt.Scanf(<span class="hljs-string">&quot;%20s&quot;</span>, &amp;nFAzj)<br>    fmt.Print(kZ2BFvOxepd5ALDR(KdlaH))<br>    fmt.Scanf(<span class="hljs-string">&quot;%20s&quot;</span>, &amp;CuSkl)<br>    vNvUO := GwSqNHQ7dPXpIG64(nFAzj)<br>    YJCya := <span class="hljs-string">&quot;&quot;</span><br>    mvOxK := YI3z8ZxOKhfLmTPC(CuSkl)<br>    <span class="hljs-keyword">if</span> mvOxK != <span class="hljs-literal">nil</span> &#123;<br>        YJCya = mvOxK()<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> YJCya != <span class="hljs-string">&quot;&quot;</span> &amp;&amp; vNvUO != <span class="hljs-string">&quot;&quot;</span> &#123;<br>        fmt.Printf(<span class="hljs-string">&quot;flag&#123;%s%s&#125;\n&quot;</span>, vNvUO, YJCya)<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>flag分为两段，第一段是<code>vNvUO</code>，第二段是<code>YJCya</code></p><h2 id="第一段"><a href="#第一段" class="headerlink" title="第一段"></a>第一段</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">GwSqNHQ7dPXpIG64</span><span class="hljs-params">(cJPTR <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">string</span> &#123;<br>    YrXQd := hex.EncodeToString([]<span class="hljs-type">byte</span>(cJPTR))<br>    <span class="hljs-keyword">return</span> fmt.Sprintf(<span class="hljs-string">&quot;%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c&quot;</span>, YrXQd[<span class="hljs-number">22</span>], YrXQd[<span class="hljs-number">19</span>], YrXQd[<span class="hljs-number">20</span>], YrXQd[<span class="hljs-number">21</span>], YrXQd[<span class="hljs-number">28</span>], YrXQd[<span class="hljs-number">10</span>], YrXQd[<span class="hljs-number">20</span>], YrXQd[<span class="hljs-number">7</span>], YrXQd[<span class="hljs-number">29</span>], YrXQd[<span class="hljs-number">14</span>], YrXQd[<span class="hljs-number">0</span>], YrXQd[<span class="hljs-number">18</span>], YrXQd[<span class="hljs-number">3</span>], YrXQd[<span class="hljs-number">24</span>], YrXQd[<span class="hljs-number">27</span>], YrXQd[<span class="hljs-number">31</span>])<br>&#125;<br></code></pre></td></tr></table></figure><p>根据输入提示，第一个函数的函数名<code>ZlXDJkH3OZN4Mayd</code>转换为hex后就是<code>YrXQd</code>了</p><h2 id="第二段"><a href="#第二段" class="headerlink" title="第二段"></a>第二段</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">UhnCm82SDGE0zLYO</span><span class="hljs-params">()</span></span> <span class="hljs-type">string</span> &#123;<br>SythK := []<span class="hljs-type">byte</span>&#123;<br><span class="hljs-number">159</span>, <span class="hljs-number">141</span>, <span class="hljs-number">72</span>, <span class="hljs-number">106</span>, <span class="hljs-number">196</span>, <span class="hljs-number">62</span>, <span class="hljs-number">16</span>, <span class="hljs-number">205</span>, <span class="hljs-number">170</span>, <span class="hljs-number">159</span>, <span class="hljs-number">36</span>, <span class="hljs-number">232</span>, <span class="hljs-number">125</span>, <span class="hljs-number">239</span>, <span class="hljs-number">208</span>, <span class="hljs-number">3</span>&#125;<br><span class="hljs-keyword">var</span> Vw2mJ, Nij87, zVclR <span class="hljs-type">string</span><br><span class="hljs-keyword">return</span> cHZv5op8rOmlAkb6(SythK, Vw2mJ, Nij87, zVclR)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">cHZv5op8rOmlAkb6</span><span class="hljs-params">(HIGXt []<span class="hljs-type">byte</span>, VGvny <span class="hljs-type">string</span>, ZOkKV <span class="hljs-type">string</span>, eU0uD <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">string</span> &#123;<br>QTk4l := <span class="hljs-built_in">make</span>([]<span class="hljs-type">byte</span>, <span class="hljs-number">20</span>)<br>Ek08m := [<span class="hljs-number">16</span>]<span class="hljs-type">byte</span>&#123;<br><span class="hljs-number">167</span>, <span class="hljs-number">238</span>, <span class="hljs-number">45</span>, <span class="hljs-number">89</span>, <span class="hljs-number">160</span>, <span class="hljs-number">95</span>, <span class="hljs-number">34</span>, <span class="hljs-number">175</span>, <span class="hljs-number">158</span>, <span class="hljs-number">169</span>, <span class="hljs-number">20</span>, <span class="hljs-number">217</span>, <span class="hljs-number">68</span>, <span class="hljs-number">137</span>, <span class="hljs-number">231</span>, <span class="hljs-number">54</span>&#125;<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++ &#123;<br>QTk4l[i] += Ek08m[i] ^ HIGXt[i]<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-type">string</span>(QTk4l)<br>&#125;<br></code></pre></td></tr></table></figure><p>找到<code>UhnCm82SDGE0zLYO</code>函数，然后找到它的调用，写解密脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    byte flag1[<span class="hljs-number">16</span>] = &#123;<br>        <span class="hljs-number">167</span>, <span class="hljs-number">238</span>, <span class="hljs-number">45</span>, <span class="hljs-number">89</span>, <span class="hljs-number">160</span>, <span class="hljs-number">95</span>, <span class="hljs-number">34</span>, <span class="hljs-number">175</span>, <span class="hljs-number">158</span>, <span class="hljs-number">169</span>, <span class="hljs-number">20</span>, <span class="hljs-number">217</span>, <span class="hljs-number">68</span>, <span class="hljs-number">137</span>, <span class="hljs-number">231</span>, <span class="hljs-number">54</span><br>    &#125;;<br>    byte flag2[<span class="hljs-number">16</span>] = &#123;<br>        <span class="hljs-number">159</span>, <span class="hljs-number">141</span>, <span class="hljs-number">72</span>, <span class="hljs-number">106</span>, <span class="hljs-number">196</span>, <span class="hljs-number">62</span>, <span class="hljs-number">16</span>, <span class="hljs-number">205</span>, <span class="hljs-number">170</span>, <span class="hljs-number">159</span>, <span class="hljs-number">36</span>, <span class="hljs-number">232</span>, <span class="hljs-number">125</span>, <span class="hljs-number">239</span>, <span class="hljs-number">208</span>, <span class="hljs-number">3</span><br>    &#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, flag1[i] ^ flag2[i]);<br>    &#125;<br>    <span class="hljs-type">char</span> YrXQd[] = <span class="hljs-string">&quot;5a6c58444a6b48334f5a4e344d617964&quot;</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n&quot;</span>, YrXQd[<span class="hljs-number">22</span>], YrXQd[<span class="hljs-number">19</span>], YrXQd[<span class="hljs-number">20</span>], YrXQd[<span class="hljs-number">21</span>], YrXQd[<span class="hljs-number">28</span>], YrXQd[<span class="hljs-number">10</span>], YrXQd[<span class="hljs-number">20</span>], YrXQd[<span class="hljs-number">7</span>], YrXQd[<span class="hljs-number">29</span>], YrXQd[<span class="hljs-number">14</span>], YrXQd[<span class="hljs-number">0</span>], YrXQd[<span class="hljs-number">18</span>], YrXQd[<span class="hljs-number">3</span>], YrXQd[<span class="hljs-number">24</span>], YrXQd[<span class="hljs-number">27</span>], YrXQd[<span class="hljs-number">31</span>]);<br>    system(<span class="hljs-string">&quot;pause&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220829130350114.png" alt="image-20220829130350114"></p><p>所以最后flag就是</p><p>flag{3a4e76449355c4148ce3da2b46019f75}</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>美团CTF RE small</title>
    <link href="/2022/10/09/2022%E7%BE%8E%E5%9B%A2CTF-RE-small/"/>
    <url>/2022/10/09/2022%E7%BE%8E%E5%9B%A2CTF-RE-small/</url>
    
    <content type="html"><![CDATA[<h1 id="2022-美团-MT-CTF"><a href="#2022-美团-MT-CTF" class="headerlink" title="2022 美团 MT-CTF"></a>2022 美团 MT-CTF</h1><h2 id="Small"><a href="#Small" class="headerlink" title="Small"></a>Small</h2><p>借鉴：[<a href="https://bbs.pediy.com/thread-274448.htm">原创]2022MT-CTF Re-茶余饭后-看雪论坛-安全社区|安全招聘|bbs.pediy.com</a></p><p>在做题的时候看到是ELF文件，直接尝试在Ubuntu上面运行，但是提示段错误。然后用IDA64打开，一直报错。想怎么修复ELF头，让他能直接运行，也有大佬提示试试看是不是shellcode，但是都失败了，看到了wp人都傻了。</p><p>首先用IDA64, 二进制模式打开</p><p>然后在0x68处按C反汇编，</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220920194825703.png" alt="image-20220920194825703"></p><p>经典的三个数两次异或运算，左移4，右移5</p><p>看cutter的反编译更清楚，可以得知这是一个TEA加密</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br> <br><span class="hljs-type">int64_t</span> <span class="hljs-title function_">entry0</span> <span class="hljs-params">(<span class="hljs-type">int64_t</span> arg_10h, <span class="hljs-type">int64_t</span> arg4, <span class="hljs-type">int64_t</span> arg1)</span> &#123;<br>    rcx = arg4;<br>    rdi = arg1;<br>    rsi = arg_10h;<br>label_0:<br>    ebx = <span class="hljs-number">0</span>;<br>    edx = ebx;<br>    eax = <span class="hljs-number">0x3e0002</span>;<br>    eax = *(rsi);<br>    rsi += <span class="hljs-number">4</span>;<br>    tmp_0 = eax;<br>    eax = ebp;<br>    ebp = tmp_0;<br>    eax = entry0;<br>    *(rax) += al;<br>    *(rax) += al;<br>    *(rax) += al;<br>    *(rax) += al;<br>    *(rax) += al;<br>    <span class="hljs-keyword">if</span> (*(rsp) != <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">goto</span> label_1;<br>    &#125;<br>    eax = *(rsi);<br>    rsi += <span class="hljs-number">4</span>;<br>    tmp_1 = eax;<br>    eax = edi;<br>    edi = tmp_1;<br>    <span class="hljs-keyword">do</span> &#123;<br>        ecx = edi;<br>        eax = edi;<br>        ebx += <span class="hljs-number">0x67452301</span>;<span class="hljs-comment">//DELTA == 0x67452301</span><br>        ecx &lt;&lt;= <span class="hljs-number">4</span>;<span class="hljs-comment">//左移4</span><br>        ecx++;<br>        eax &gt;&gt;= <span class="hljs-number">5</span>;<span class="hljs-comment">//右移5</span><br>        eax += <span class="hljs-number">0x23</span>;<br>        ecx ^= eax;<span class="hljs-comment">//异或</span><br>        eax = edi;<br>        eax += ebx;<br>        ecx ^= eax;<span class="hljs-comment">//异或</span><br>        ebp += ecx;<br>        ecx = ebp;<br>        ecx &gt;&gt;= <span class="hljs-number">5</span>;<span class="hljs-comment">//右移5</span><br>        ecx += <span class="hljs-number">0x67</span>;<br>        eax = ebp;<br>        eax &lt;&lt;= <span class="hljs-number">4</span>;<span class="hljs-comment">//左移4</span><br>        eax += <span class="hljs-number">0x45</span>;<br>        ecx ^= eax;<br>        eax = ebp;<br>        eax += ebx;<br>        ecx ^= eax;<br>        edi += ecx;<br>        edx++;<br>    &#125; <span class="hljs-keyword">while</span> (edx &lt; <span class="hljs-number">0x23</span>);<span class="hljs-comment">//加密轮数为0x23次</span><br>    *((rsi - <span class="hljs-number">8</span>)) = ebp;<br>    *((rsi - <span class="hljs-number">4</span>)) = edi;<br>    ecx = arg_10h;<br>    ecx += <span class="hljs-number">0x20</span>;<br>    <span class="hljs-keyword">if</span> (esi &lt; ecx) &#123;<br>        <span class="hljs-keyword">goto</span> label_0;<br>    &#125;<br>    tmp_2 = rax;<br>    rax = rsi;<br>    rsi = tmp_2;<br>    esi = <span class="hljs-number">0x20</span>;<br>    <span class="hljs-keyword">do</span> &#123;<br>        cl = *(rax);<br>        <span class="hljs-keyword">if</span> (*((esi + <span class="hljs-number">0x100f7</span>)) != cl) &#123;<span class="hljs-comment">//加密结束后与预先保存的密文进行倒序对比</span><br>            <span class="hljs-keyword">goto</span> label_1;<br>        &#125;<br>        esi--;<br>        rax--;<br>    &#125; <span class="hljs-keyword">while</span> (esi != <span class="hljs-number">0</span>);<br>    edi = <span class="hljs-number">1</span>;<br>    esi = <span class="hljs-number">0x100f3</span>;<br>    eax = <span class="hljs-number">1</span>;<br>    dx = <span class="hljs-number">4</span>;<br>    rax = syscall_80h (rdi, rsi, rdx, r10, r8, r9);<br>label_1:<br>    eax = <span class="hljs-number">0x3c</span>;<br>    edi = esi;<br>    rax = syscall_80h (rdi, rsi, rdx, r10, r8, r9);<br>    __asm (<span class="hljs-string">&quot;outsd dx, dword [esi]&quot;</span>);<br>    __asm (<span class="hljs-string">&quot;outsd dx, dword [rsi]&quot;</span>);<br>    <span class="hljs-keyword">if</span> (esi overflow <span class="hljs-number">0</span>) &#123;<br>        fp_status = fp_compare(fp_stack[<span class="hljs-number">0</span>], fp_stack[<span class="hljs-number">0</span>]);<br>        fp_stack++;<br>        edi -= ecx;<br>    &#125;<br>    fp_stack[<span class="hljs-number">0</span>] *= *((rbp + rdx*<span class="hljs-number">8</span> - <span class="hljs-number">0x62</span>));<br>    __asm (<span class="hljs-string">&quot;insd dword [rdi], dx&quot;</span>);<br>    __asm (<span class="hljs-string">&quot;out 0x4e, eax&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-type">void</span> (*<span class="hljs-number">0x10180</span>)() ();<br>&#125;<br><br></code></pre></td></tr></table></figure><p>直接定位到0x100f7，可以找到密文就是在0x100f7~0x100f7+0x20之间</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220920214933839.png" alt="image-20220920214933839"></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">enc=<span class="hljs-built_in">list</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">&#x27;437108ded21bf9c4dcdaf6da4cd59e6de74eeb7504dc1d5dd90f1b51fb88dc51&#x27;</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(enc),<span class="hljs-number">4</span>):<br>    num=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        num|=(enc[i+j]&lt;&lt;(<span class="hljs-number">8</span>*j))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(num),end=<span class="hljs-string">&#x27;,&#x27;</span>)<br><br>  <span class="hljs-comment">#0xde087143,0xc4f91bd2,0xdaf6dadc,0x6d9ed54c,0x75eb4ee7,0x5d1ddc04,0x511b0fd9,0x51dc88fb</span><br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ut32 unsigned int</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> delta 0x67452301</span><br> <br><span class="hljs-type">void</span> <span class="hljs-title function_">Tea_Decrypt</span><span class="hljs-params">(ut32* enc)</span> &#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> sum = <span class="hljs-number">0x67452301</span> * <span class="hljs-number">0x23</span>;<span class="hljs-comment">//0x1e73c923;</span><br>    ut32 v0 = enc[<span class="hljs-number">0</span>];<br>    ut32 v1 = enc[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">0x23</span>; i++) &#123;<br>        v1 -= ((v0 &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">0x45</span>) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="hljs-number">5</span>) + <span class="hljs-number">0x67</span>);<br>        v0 -= ((v1 &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">1</span>) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="hljs-number">5</span>) + <span class="hljs-number">0x23</span>);<br>        sum -= <span class="hljs-number">0x67452301</span>;<br>    &#125;<br>    enc[<span class="hljs-number">0</span>] = v0;<br>    enc[<span class="hljs-number">1</span>] = v1;<br>&#125;<br> <br><span class="hljs-type">void</span> <span class="hljs-title function_">Tea_Encrypt</span><span class="hljs-params">(ut32* src)</span> &#123;<br>    ut32 sum = <span class="hljs-number">0</span>;<br>    ut32 v0 = src[<span class="hljs-number">0</span>];<br>    ut32 v1 = src[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">0x23</span>; i++) &#123;<br>        sum += <span class="hljs-number">0x67452301</span>;<br>        v0 += ((v1 &lt;&lt; <span class="hljs-number">4</span>) +<span class="hljs-number">1</span>) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="hljs-number">5</span>) + <span class="hljs-number">0x23</span>);<br>        v1 += ((v0 &lt;&lt; <span class="hljs-number">4</span>) + <span class="hljs-number">0x45</span>) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="hljs-number">5</span>) + <span class="hljs-number">0x67</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%08x\n&quot;</span>, sum);<br>    src[<span class="hljs-number">0</span>] = v0;<br>    src[<span class="hljs-number">1</span>] = v1;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    ut32 enc[<span class="hljs-number">8</span>] = &#123; <span class="hljs-number">0xde087143</span>,<span class="hljs-number">0xc4f91bd2</span>,<span class="hljs-number">0xdaf6dadc</span>,<span class="hljs-number">0x6d9ed54c</span>,<span class="hljs-number">0x75eb4ee7</span>,<span class="hljs-number">0x5d1ddc04</span>,<span class="hljs-number">0x511b0fd9</span>,<span class="hljs-number">0x51dc88fb</span> &#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i += <span class="hljs-number">2</span>) &#123;<br>        Tea_Decrypt(enc+i);<br>    &#125;<br> <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,*((<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>*)enc+i));<br>    &#125;<br>        <span class="hljs-comment">//327a6c4304ad5938eaf0efb6cc3e53dc</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2022QWB Re find basic</title>
    <link href="/2022/10/09/2022QWB-Re-find-basic/"/>
    <url>/2022/10/09/2022QWB-Re-find-basic/</url>
    
    <content type="html"><![CDATA[<h1 id="2022强网杯re——find-basic"><a href="#2022强网杯re——find-basic" class="headerlink" title="2022强网杯re——find_basic"></a>2022强网杯re——find_basic</h1><p>首先查壳，该程序是一个32位ELF文件</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822163610119.png" alt="image-20220822163610119"></p><p>进入main函数，可以看到大量的混淆，每个都是由pushf, pusha, mov, call, pop五个指令为一组进行，与虚拟机混淆十分类似</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822163721787.png" alt="image-20220822163721787"></p><p>然后在第一个pushf处下断点，直接动态调试（因为就算F5了也没什么用，根本看不懂）</p><p>在第一次混淆中每处都F7步入，分析</p><p>进入第一个函数</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822164218587.png" alt="image-20220822164218587"></p><p>主要会有下面两个函数</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822164536372.png" alt="image-20220822164536372"></p><p>继续F7分析，会发现第一个函数的功能就是将一个地址处的值压入EAX寄存器，再加一：</p><p>第二个函数</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822164719689.png" alt="image-20220822164719689"></p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822164845831.png" alt="image-20220822164845831"></p><p>可以看出这里有一个循环，但是每一次左边的操作只有加一，所以直接在右边第一条指令下断点，F9</p><p>然后F7直接返回上一个函数</p><p>所以这两个函数都是没用的混淆</p><p>返回之后继续单步步入，发现进行了一些比较后，进行了多次跳转，当c1 &#x3D;&#x3D; 3Fh时跳转到这里</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822165249779.png" alt="image-20220822165249779"></p><p>单步步入到这里</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822165430354.png" alt="image-20220822165430354"></p><p>然后步入，发现这些函数都是和前面那些函数形式上差不多的混淆操作，没什么用，只有最后一个函数是前面加一之后的值减一</p><p>然后执行jmp跳转</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822165738927.png" alt="image-20220822165738927"></p><p>发现程序回到了原点，然后接下来可以继续再跟进下一个函数，发现进行的操作都是同样的，然后接下来不断按下F8步过，</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823105425373.png" alt="image-20220823105425373"></p><p>到这里不管怎么按F8都没用了，说明程序要求我们输入了</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220822170224743.png" alt="image-20220822170224743"></p><p>然后随便输入些什么，主要是方便接下来的跟踪，这里输入123456789，</p><p>然后开始F7单步步入，进入到第一个有用代码块</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823105734413.png" alt="image-20220823105734413"></p><p>在这里，先将输入的内容保存到了eax中，然后再把它压入堆栈</p><p>然后继续步入，到</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823110215865.png" alt="image-20220823110215865"></p><p>进入分析这个函数</p><p>内层有很多混淆，绝大多数都是没用的函数，但是跳转到有用的指令前都会进行一个cmp指令和jnz指令，成功跳转后的指令就是有用的指令</p><p>进入到这里</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823110633629.png" alt="image-20220823110633629"></p><p>这块的操作就是将我们输入的数据保存</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823110706916.png" alt="image-20220823110706916"></p><p>继续步入，到这里，是第一个关键部位</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823110742596.png" alt="image-20220823110742596"></p><p>将eax寄存器的内容乘以42B45h，而eax寄存器中保存的内容恰好就是输入的第一个值，在这里也可以看到，就是字符1对应的ASCII码</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823110914559.png" alt="image-20220823110914559"></p><p>再步入到下一个函数，这里的sub eax, 1A93D7Eh，也相当于是一种比较，如果两个数值相等，执行后ZF会被置为1，如果不相等会被置为0，运行后，ZF为0</p><p>至于为什么eax寄存器的值到这一步没有变，可以仔细看前面的push和pop指令，eax寄存器的值在eax被使用之前先被压入栈中，然后在使用完后再出栈，保证了值不会被改变</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823111245821.png" alt="image-20220823111245821"></p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823111459859.png" alt="image-20220823111459859"></p><p>就可以得到flag[0] * 42B45h &#x3D;&#x3D; 1A93D7Eh，</p><p>然后接下来为了避免复杂的动调，使用IDA的tracing功能</p><p>进入这个窗口，发现他什么都没有</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823111923566.png" alt="image-20220823111923566"></p><p>然后打开view——Toolbars——Tracing</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823112006254.png" alt="image-20220823112006254"></p><p>然后打开Tracing options</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823112055819.png" alt="image-20220823112055819"></p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823112126731.png" alt="image-20220823112126731"></p><p>不用修改数据，直接默认，点击OK</p><p>然后点亮右上角的这个</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823112310594.png" alt="image-20220823112310594"></p><p>然后下断点，F9运行即可，然后等待一会后，这里就会记录下来刚才所有的指令</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823112525811.png" alt="image-20220823112525811"></p><p>然后将它复制到VScode中，然后直接搜索</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823112930835.png" alt="image-20220823112930835"></p><p>因为之前说过，真正的有用代码执行前都会执行cmp和jnz指令，只有cmp的被操作数和在进入混淆前给的字符相同时才会进行</p><p>定位到这一块，然后分析</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823113140573.png" alt="image-20220823113140573"></p><p>根据之前的特征分析，这一步进行的是flag[1] * 3B10Fh</p><p>然后进行相同的方法，下端点，F9（切记要在重新记录前清空Tracing界面）</p><p>然后定位到这里</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823113444737.png" alt="image-20220823113444737"></p><p>分析出他的指令第一步是 flag[0] * 1E4E0h，然后add指令就是flag[0] * 1E4E0h + flag[1] * 3B10Fh</p><p>然后故技重施</p><p><img src="https://renovice-1311449499.cos.ap-chongqing.myqcloud.com/img/image-20220823113717462.png" alt="image-20220823113717462"></p><p>到这里发现，sub eax, 24FE394h，实际上就是flag[0] * 1E4E0h + flag[1] * 3B10Fh &#x3D;&#x3D; 24FE394h</p><p>已经可以想到了，肯定是用到z3的方程组求解，</p><p>接下来只需要重复这样的步骤，获取后面的数据，然后再用z3求解</p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">flag = [BitVec(<span class="string">&#x27;flag[%d]&#x27;</span> % i, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x1c</span>)]</span><br><span class="line"></span><br><span class="line">solver = Solver()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x1c</span>):</span><br><span class="line">    solver.add(flag[i] &gt;= <span class="number">32</span>)</span><br><span class="line">    solver.add(flag[i] &lt;= <span class="number">127</span>)</span><br><span class="line"></span><br><span class="line">solver.add(flag[<span class="number">0</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;f&#x27;</span>))</span><br><span class="line">solver.add(flag[<span class="number">1</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;l&#x27;</span>))</span><br><span class="line">solver.add(flag[<span class="number">2</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">solver.add(flag[<span class="number">3</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;g&#x27;</span>))</span><br><span class="line">solver.add(flag[<span class="number">4</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;&#123;&#x27;</span>))</span><br><span class="line">solver.add(flag[-<span class="number">1</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;&#125;&#x27;</span>))</span><br><span class="line"></span><br><span class="line">solver.add(flag[<span class="number">0</span>] * <span class="number">0x42b45</span> - <span class="number">0x1a93d7e</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">1</span>] * <span class="number">0x3b10f</span> + flag[<span class="number">0</span>] * <span class="number">0x1e4e0</span> - <span class="number">0x24fe394</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">0</span>] * <span class="number">0x31fc4</span> + flag[<span class="number">1</span>] * <span class="number">0xfffdb038</span> + flag[<span class="number">2</span>] * <span class="number">0x1390f</span> - <span class="number">0xbb9e67</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">0</span>] * <span class="number">0x32494</span> + flag[<span class="number">3</span>] * <span class="number">0xfffe5a07</span> + flag[<span class="number">1</span>] * <span class="number">0xa4e6</span> + flag[<span class="number">2</span>] * <span class="number">0x6ba7</span> - <span class="number">0x1052718</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">1</span>] * <span class="number">0xfffe0c3f</span> + flag[<span class="number">2</span>] * <span class="number">0x43e32</span> + flag[<span class="number">0</span>] * <span class="number">0x3f49d</span> + flag[<span class="number">3</span>] * <span class="number">0xc094</span> + flag[<span class="number">4</span>] * <span class="number">0xfffb7eff</span> - <span class="number">0x7fb225</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">5</span>] * <span class="number">0x33e5b</span> + flag[<span class="number">1</span>] * <span class="number">0x157f8</span> + flag[<span class="number">4</span>] * <span class="number">0xd4eb</span> + flag[<span class="number">2</span>] * <span class="number">0xfffc9ad6</span> + flag[<span class="number">3</span>] * <span class="number">0x9c95</span> + flag[<span class="number">0</span>] * <span class="number">0xfffd8c2e</span> - <span class="number">0x6a31d</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">6</span>] * <span class="number">0x6d8c</span> + flag[<span class="number">4</span>] * <span class="number">0xfffedd66</span> + flag[<span class="number">5</span>] * <span class="number">0x46fd4</span> + flag[<span class="number">1</span>] * <span class="number">0xfffc79bb</span> + flag[<span class="number">3</span>] * <span class="number">0xfffbe7f5</span> + flag[<span class="number">2</span>] * <span class="number">0x14cde</span> + flag[<span class="number">0</span>] * <span class="number">0xfffc4acd</span> + <span class="number">0x3083b63</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">4</span>] * <span class="number">0x129fd</span> + flag[<span class="number">7</span>] * <span class="number">0x2a3cd</span> + flag[<span class="number">5</span>] * <span class="number">0x52a1</span> + flag[<span class="number">6</span>] * <span class="number">0x87de</span> + flag[<span class="number">3</span>] * <span class="number">0x357c1</span> + flag[<span class="number">0</span>] * <span class="number">0xfffbe625</span> + flag[<span class="number">1</span>] * <span class="number">0xfffec17b</span> + flag[<span class="number">2</span>] * <span class="number">0x8039</span> - <span class="number">0xd3b6ed</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">4</span>] * <span class="number">0xfffe590f</span> + flag[<span class="number">6</span>] * <span class="number">0xfffc6bb7</span> + flag[<span class="number">0</span>] * <span class="number">0x2aec8</span> + flag[<span class="number">7</span>] * <span class="number">0xfffd58b1</span> + flag[<span class="number">3</span>] * <span class="number">0xfffcf131</span> + flag[<span class="number">8</span>] * <span class="number">0xfffc0fae</span> + flag[<span class="number">1</span>] * <span class="number">0xfffcf46a</span> + flag[<span class="number">2</span>] * <span class="number">0xfffbbb98</span> + flag[<span class="number">5</span>] * <span class="number">0xfffc9913</span> + <span class="number">0x7a4d9d3</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">6</span>] * <span class="number">0x3cb6</span> + flag[<span class="number">5</span>] * <span class="number">0xfffc5201</span> + flag[<span class="number">9</span>] * <span class="number">0xfffdec99</span> + flag[<span class="number">8</span>] * <span class="number">0x195a8</span> + flag[<span class="number">4</span>] * <span class="number">0xfffbcea6</span> + flag[<span class="number">7</span>] * <span class="number">0xfffd4f63</span> + flag[<span class="number">0</span>] * <span class="number">0x3852e</span> + flag[<span class="number">3</span>] * <span class="number">0x36c09</span> + flag[<span class="number">2</span>] * <span class="number">0xfffdffc6</span> + flag[<span class="number">1</span>] * <span class="number">0xffffbb8f</span> + <span class="number">0x27b7033</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">8</span>] * <span class="number">0xfffb7a1c</span> + flag[<span class="number">10</span>] * <span class="number">0xffff35fe</span> + flag[<span class="number">4</span>] * <span class="number">0xfffe5693</span> + flag[<span class="number">3</span>] * <span class="number">0xfffdb9f4</span> + flag[<span class="number">5</span>] * <span class="number">0xbd38</span> + flag[<span class="number">1</span>] * <span class="number">0x25b89</span> + flag[<span class="number">2</span>] * <span class="number">0x3074d</span> + flag[<span class="number">7</span>] * <span class="number">0xfffe5f6f</span> + flag[<span class="number">9</span>] * <span class="number">0x1400e</span> + flag[<span class="number">0</span>] * <span class="number">0xfffcd14c</span> + flag[<span class="number">6</span>] * <span class="number">0x4036d</span> + <span class="number">0xa8256</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">7</span>] * <span class="number">0x2da7a</span> + flag[<span class="number">2</span>] * <span class="number">0xfffbfd56</span> + flag[<span class="number">9</span>] * <span class="number">0xffff0011</span> + flag[<span class="number">0</span>] * <span class="number">0xfffce077</span> + flag[<span class="number">3</span>] * <span class="number">0x34d5d</span> + flag[<span class="number">5</span>] * <span class="number">0xfffb8def</span> + flag[<span class="number">10</span>] * <span class="number">0xffff2d4e</span> + flag[<span class="number">4</span>] * <span class="number">0x237a3</span> + flag[<span class="number">1</span>] * <span class="number">0x386e1</span> + flag[<span class="number">6</span>] * <span class="number">0xfb89</span> + flag[<span class="number">8</span>] * <span class="number">0x2e485</span> + flag[<span class="number">11</span>] * <span class="number">0x42574</span> - <span class="number">0x24df62a</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">10</span>] * <span class="number">0x21c5e</span> + flag[<span class="number">1</span>] * <span class="number">0x32144</span> + flag[<span class="number">11</span>] * <span class="number">0x420e3</span> + flag[<span class="number">3</span>] * <span class="number">0x3f6d0</span> + flag[<span class="number">0</span>] * <span class="number">0x1a459</span> + flag[<span class="number">2</span>] * <span class="number">0xfffc900e</span> + flag[<span class="number">8</span>] * <span class="number">0x3fd03</span> + flag[<span class="number">7</span>] * <span class="number">0x43d16</span> + flag[<span class="number">5</span>] * <span class="number">0xfffe4105</span> + flag[<span class="number">6</span>] * <span class="number">0xfffd400a</span> + flag[<span class="number">9</span>] * <span class="number">0xffffc29b</span> + flag[<span class="number">4</span>] * <span class="number">0x2f9f0</span> + flag[<span class="number">12</span>] * <span class="number">0x19432</span> - <span class="number">0x6f9b293</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">1</span>] * <span class="number">0xfffca694</span> + flag[<span class="number">0</span>] * <span class="number">0xfffce151</span> + flag[<span class="number">9</span>] * <span class="number">0x30418</span> + flag[<span class="number">11</span>] * <span class="number">0x2f6aa</span> + flag[<span class="number">4</span>] * <span class="number">0x1b619</span> + flag[<span class="number">8</span>] * <span class="number">0x22e4</span> + flag[<span class="number">7</span>] * <span class="number">0xfffe1384</span> + flag[<span class="number">10</span>] * <span class="number">0xffffa664</span> + flag[<span class="number">3</span>] * <span class="number">0x13e07</span> + flag[<span class="number">2</span>] * <span class="number">0xfffc46de</span> + flag[<span class="number">5</span>] * <span class="number">0x79d6</span> + flag[<span class="number">12</span>] * <span class="number">0x4372b</span> + flag[<span class="number">13</span>] * <span class="number">0x3d1d</span> + flag[<span class="number">6</span>] * <span class="number">0x4d41</span> - <span class="number">0x176513c</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">7</span>] * <span class="number">0x29b04</span> + flag[<span class="number">3</span>] * <span class="number">0xfffd2684</span> + flag[<span class="number">2</span>] * <span class="number">0xfffd9a2f</span> + flag[<span class="number">10</span>] * <span class="number">0xfffd79fc</span> + flag[<span class="number">13</span>] * <span class="number">0x2594e</span> + flag[<span class="number">12</span>] * <span class="number">0x41c45</span> + flag[<span class="number">6</span>] * <span class="number">0xfffc9c57</span> + flag[<span class="number">5</span>] * <span class="number">0xfffc5f95</span> + flag[<span class="number">11</span>] * <span class="number">0xfffec65c</span> + flag[<span class="number">14</span>] * <span class="number">0xffffb642</span> + flag[<span class="number">1</span>] * <span class="number">0xfffcb527</span> + flag[<span class="number">0</span>] * <span class="number">0x2792e</span> + flag[<span class="number">4</span>] * <span class="number">0xfffe1bb7</span> + flag[<span class="number">8</span>] * <span class="number">0x445a1</span> + flag[<span class="number">9</span>] * <span class="number">0xfffd25cc</span> + <span class="number">0x5338cd6</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">14</span>] * <span class="number">0xfffd399c</span> + flag[<span class="number">3</span>] * <span class="number">0xffff3edb</span> + flag[<span class="number">11</span>] * <span class="number">0x26b94</span> + flag[<span class="number">13</span>] * <span class="number">0xfffcee81</span> + flag[<span class="number">4</span>] * <span class="number">0xfffefe93</span> + flag[<span class="number">5</span>] * <span class="number">0xfffcdfa4</span> + flag[<span class="number">6</span>] * <span class="number">0xfffe2a42</span> + flag[<span class="number">0</span>] * <span class="number">0x10ba4</span> + flag[<span class="number">10</span>] * <span class="number">0x38e1d</span> + flag[<span class="number">12</span>] * <span class="number">0x14c1e</span> + flag[<span class="number">7</span>] * <span class="number">0xffffce4a</span> + flag[<span class="number">8</span>] * <span class="number">0xfffd2a4b</span> + flag[<span class="number">9</span>] * <span class="number">0x41fc</span> + flag[<span class="number">1</span>] * <span class="number">0xfffedbac</span> + flag[<span class="number">2</span>] * <span class="number">0xfffeab6a</span> + flag[<span class="number">15</span>] * <span class="number">0xfffe4e59</span> + <span class="number">0x299ff72</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">14</span>] * <span class="number">0xfffdc67b</span> + flag[<span class="number">1</span>] * <span class="number">0xffffb1fc</span> + flag[<span class="number">12</span>] * <span class="number">0xffff59be</span> + flag[<span class="number">8</span>] * <span class="number">0x3684</span> + flag[<span class="number">5</span>] * <span class="number">0x202c2</span> + flag[<span class="number">10</span>] * <span class="number">0x2e43</span> + flag[<span class="number">6</span>] * <span class="number">0xffff3a46</span> + flag[<span class="number">7</span>] * <span class="number">0x6a23</span> + flag[<span class="number">2</span>] * <span class="number">0xebfb</span> + flag[<span class="number">0</span>] * <span class="number">0xfffbb78a</span> + flag[<span class="number">15</span>] * <span class="number">0xd44a</span> + flag[<span class="number">13</span>] * <span class="number">0x385eb</span> + flag[<span class="number">11</span>] * <span class="number">0xfffee046</span> + flag[<span class="number">9</span>] * <span class="number">0xfffeb282</span> + flag[<span class="number">4</span>] * <span class="number">0xfffde639</span> + flag[<span class="number">3</span>] * <span class="number">0xfffd6738</span> + flag[<span class="number">16</span>] * <span class="number">0xffff1aa3</span> + <span class="number">0x4728350</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">1</span>] * <span class="number">0x28c9c</span> + flag[<span class="number">4</span>] * <span class="number">0xfffdc4ae</span> + flag[<span class="number">3</span>] * <span class="number">0x278ad</span> + flag[<span class="number">17</span>] * <span class="number">0x326ca</span> + flag[<span class="number">7</span>] * <span class="number">0xfffd423d</span> + flag[<span class="number">15</span>] * <span class="number">0xfffc96fc</span> + flag[<span class="number">10</span>] * <span class="number">0xfffeeb1a</span> + flag[<span class="number">9</span>] * <span class="number">0xfffc2ee0</span> + flag[<span class="number">5</span>] * <span class="number">0x106be</span> + flag[<span class="number">6</span>] * <span class="number">0xffff5d67</span> + flag[<span class="number">8</span>] * <span class="number">0x27</span> + flag[<span class="number">11</span>] * <span class="number">0xfffbc3b6</span> + flag[<span class="number">12</span>] * <span class="number">0xfffd163c</span> + flag[<span class="number">13</span>] * <span class="number">0xfffb9b47</span> + flag[<span class="number">2</span>] * <span class="number">0x1e6ed</span> + flag[<span class="number">0</span>] * <span class="number">0xfffc6c6f</span> + flag[<span class="number">16</span>] * <span class="number">0x3b32b</span> + flag[<span class="number">14</span>] * <span class="number">0x2feea</span> + <span class="number">0x48d1119</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">3</span>] * <span class="number">0xfffc2bb3</span> + flag[<span class="number">0</span>] * <span class="number">0xfffce76f</span> + flag[<span class="number">4</span>] * <span class="number">0xfffca692</span> + flag[<span class="number">1</span>] * <span class="number">0xfffdf4bc</span> + flag[<span class="number">14</span>] * <span class="number">0x192f9</span> + flag[<span class="number">17</span>] * <span class="number">0xfffe5a1e</span> + flag[<span class="number">15</span>] * <span class="number">0xfffed4f3</span> + flag[<span class="number">7</span>] * <span class="number">0xffff94f8</span> + flag[<span class="number">6</span>] * <span class="number">0xfffc717e</span> + flag[<span class="number">9</span>] * <span class="number">0xfffed29b</span> + flag[<span class="number">10</span>] * <span class="number">0xfffd28d9</span> + flag[<span class="number">8</span>] * <span class="number">0x218df</span> + flag[<span class="number">2</span>] * <span class="number">0x28e00</span> + flag[<span class="number">12</span>] * <span class="number">0xfffdd0af</span> + flag[<span class="number">13</span>] * <span class="number">0x25d22</span> + flag[<span class="number">11</span>] * <span class="number">0x42ebb</span> + flag[<span class="number">5</span>] * <span class="number">0xffff1382</span> + flag[<span class="number">18</span>] * <span class="number">0x7404</span> + flag[<span class="number">16</span>] * <span class="number">0xfffe2dff</span> + <span class="number">0x60245a5</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">5</span>] * <span class="number">0x21061</span> + flag[<span class="number">0</span>] * <span class="number">0xfffbcb01</span> + flag[<span class="number">19</span>] * <span class="number">0xffff7442</span> + flag[<span class="number">3</span>] * <span class="number">0x24568</span> + flag[<span class="number">6</span>] * <span class="number">0x1b201</span> + flag[<span class="number">13</span>] * <span class="number">0x2d232</span> + flag[<span class="number">14</span>] * <span class="number">0x13777</span> + flag[<span class="number">7</span>] * <span class="number">0xfffee013</span> + flag[<span class="number">8</span>] * <span class="number">0xfffc7505</span> + flag[<span class="number">2</span>] * <span class="number">0x264ed</span> + flag[<span class="number">1</span>] * <span class="number">0x33b4f</span> + flag[<span class="number">11</span>] * <span class="number">0x286d8</span> + flag[<span class="number">17</span>] * <span class="number">0x33e8b</span> + flag[<span class="number">12</span>] * <span class="number">0x21529</span> + flag[<span class="number">16</span>] * <span class="number">0xfffb7c1a</span> + flag[<span class="number">18</span>] * <span class="number">0xfffd07a3</span> + flag[<span class="number">10</span>] * <span class="number">0xffff8453</span> + flag[<span class="number">4</span>] * <span class="number">0x9754</span> + flag[<span class="number">9</span>] * <span class="number">0xfffd603d</span> + flag[<span class="number">15</span>] * <span class="number">0xfffdd85b</span> - <span class="number">0x254e142</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">0</span>] * <span class="number">0xfffe206e</span> + flag[<span class="number">12</span>] * <span class="number">0x2f048</span> + flag[<span class="number">8</span>] * <span class="number">0xfffc19fa</span> + flag[<span class="number">4</span>] &lt;&lt; <span class="number">6</span> + flag[<span class="number">7</span>] * <span class="number">0x370d</span> + flag[<span class="number">13</span>] * <span class="number">0xfffd9c2f</span> + flag[<span class="number">6</span>] * <span class="number">0xfffdb413</span> + flag[<span class="number">20</span>] * <span class="number">0x30e0a</span> + flag[<span class="number">18</span>] * <span class="number">0xfffe07f8</span> + flag[<span class="number">9</span>] * <span class="number">0xfffedfd5</span> + flag[<span class="number">10</span>] * <span class="number">0xfffee6f6</span> + flag[<span class="number">3</span>] * <span class="number">0x46247</span> + flag[<span class="number">1</span>] * <span class="number">0x2b8ed</span> + flag[<span class="number">16</span>] * <span class="number">0x2d291</span> + flag[<span class="number">5</span>] * <span class="number">0xfffdc54d</span> + flag[<span class="number">15</span>] * <span class="number">0xfffc5b55</span> + flag[<span class="number">14</span>] * <span class="number">0xfffb8061</span> + flag[<span class="number">11</span>] * <span class="number">0x43913</span> + flag[<span class="number">2</span>] * <span class="number">0xffffe191</span> + flag[<span class="number">17</span>] * <span class="number">0xfffd276e</span> + flag[<span class="number">19</span>] * <span class="number">0xfffe5841</span> + <span class="number">0xce53e7</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">20</span>] * <span class="number">0xfffed971</span> + flag[<span class="number">21</span>] * <span class="number">0x46741</span> + flag[<span class="number">18</span>] * <span class="number">0xfffbac8c</span> + flag[<span class="number">1</span>] * <span class="number">0xfffeb4e7</span> + flag[<span class="number">13</span>] * <span class="number">0x1026b</span> + flag[<span class="number">12</span>] * <span class="number">0xfffe7d86</span> + flag[<span class="number">6</span>] * <span class="number">0xfffd5fec</span> + flag[<span class="number">3</span>] * <span class="number">0x48ddb</span> + flag[<span class="number">16</span>] * <span class="number">0xfffc6bc1</span> + flag[<span class="number">17</span>] * <span class="number">0x37ece</span> + flag[<span class="number">8</span>] * <span class="number">0x41105</span> + flag[<span class="number">2</span>] * <span class="number">0xfffe6667</span> + flag[<span class="number">19</span>] * <span class="number">0xfffe75b2</span> + flag[<span class="number">4</span>] * <span class="number">0x61b0</span> + flag[<span class="number">14</span>] * <span class="number">0xffffd602</span> + flag[<span class="number">11</span>] * <span class="number">0xfffbce29</span> + flag[<span class="number">0</span>] * <span class="number">0xffff07d7</span> + flag[<span class="number">5</span>] * <span class="number">0x34c8e</span> + flag[<span class="number">15</span>] * <span class="number">0x32996</span> + flag[<span class="number">10</span>] * <span class="number">0x49530</span> + flag[<span class="number">7</span>] * <span class="number">0x33822</span> + flag[<span class="number">9</span>] * <span class="number">0xfffce161</span> + <span class="number">0x42666b</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">8</span>] * <span class="number">0xfffe06e8</span> + flag[<span class="number">12</span>] * <span class="number">0xfffd0441</span> + flag[<span class="number">2</span>] * <span class="number">0x16357</span> + flag[<span class="number">3</span>] * <span class="number">0x1d95f</span> + flag[<span class="number">22</span>] * <span class="number">0xffff89d3</span> + flag[<span class="number">1</span>] * <span class="number">0xfffba022</span> + flag[<span class="number">16</span>] * <span class="number">0x46180</span> + flag[<span class="number">4</span>] * <span class="number">0xffff4240</span> + flag[<span class="number">5</span>] * <span class="number">0x199c5</span> + flag[<span class="number">21</span>] * <span class="number">0xffff442c</span> + flag[<span class="number">17</span>] * <span class="number">0xfffc2fac</span> + flag[<span class="number">10</span>] * <span class="number">0x32600</span> + flag[<span class="number">19</span>] * <span class="number">0x1d03a</span> + flag[<span class="number">9</span>] * <span class="number">0x19435</span> + flag[<span class="number">15</span>] * <span class="number">0xfffd1667</span> + flag[<span class="number">18</span>] * <span class="number">0x35d1d</span> + flag[<span class="number">0</span>] * <span class="number">0x96c4</span> + flag[<span class="number">11</span>] * <span class="number">0x2fa24</span> + flag[<span class="number">7</span>] * <span class="number">0xb20c</span> + flag[<span class="number">6</span>] * <span class="number">0xebee</span> + flag[<span class="number">20</span>] * <span class="number">0x428a6</span> + flag[<span class="number">14</span>] * <span class="number">0xfffceb8a</span> + flag[<span class="number">13</span>] * <span class="number">0x22784</span> - <span class="number">0x3604a63</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">0</span>] * <span class="number">0x1e3e2</span> + flag[<span class="number">9</span>] * <span class="number">0x1cfb9</span> + flag[<span class="number">6</span>] * <span class="number">0xc3f7</span> + flag[<span class="number">10</span>] * <span class="number">0x94cd</span> + flag[<span class="number">22</span>] * <span class="number">0xfffc7fd0</span> + flag[<span class="number">2</span>] * <span class="number">0x21165</span> + flag[<span class="number">23</span>] * <span class="number">0xfffcfb41</span> + flag[<span class="number">14</span>] * <span class="number">0xffff819d</span> + flag[<span class="number">5</span>] * <span class="number">0xfffbeb76</span> + flag[<span class="number">1</span>] * <span class="number">0x16751</span> + flag[<span class="number">19</span>] * <span class="number">0xe1a</span> + flag[<span class="number">17</span>] * <span class="number">0x238a0</span> + flag[<span class="number">12</span>] * <span class="number">0x28f99</span> + flag[<span class="number">8</span>] * <span class="number">0x45bc</span> + flag[<span class="number">20</span>] * <span class="number">0xffffcb18</span> + flag[<span class="number">15</span>] * <span class="number">0x32d58</span> + flag[<span class="number">11</span>] * <span class="number">0xffffe4bc</span> + flag[<span class="number">16</span>] * <span class="number">0xfffeea95</span> + flag[<span class="number">13</span>] * <span class="number">0x44f3a</span> + flag[<span class="number">18</span>] * <span class="number">0xb047</span> + flag[<span class="number">7</span>] * <span class="number">0xfffcfc36</span> + flag[<span class="number">21</span>] * <span class="number">0x1719</span> + flag[<span class="number">4</span>] * <span class="number">0x1b011</span> + flag[<span class="number">3</span>] * <span class="number">0xfffea265</span> - <span class="number">0x2918269</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">15</span>] * <span class="number">0xfffbf307</span> + flag[<span class="number">8</span>] * <span class="number">0xffff2847</span> + flag[<span class="number">6</span>] * <span class="number">0xfffcfd31</span> + flag[<span class="number">2</span>] * <span class="number">0x40f96</span> + flag[<span class="number">22</span>] * <span class="number">0x2b265</span> + flag[<span class="number">5</span>] * <span class="number">0xfffc7802</span> + flag[<span class="number">3</span>] * <span class="number">0x1b103</span> + flag[<span class="number">4</span>] * <span class="number">0x42452</span> + flag[<span class="number">14</span>] * <span class="number">0x3c5d</span> + flag[<span class="number">1</span>] * <span class="number">0x15b55</span> + flag[<span class="number">9</span>] * <span class="number">0xfffeb722</span> + flag[<span class="number">13</span>] * <span class="number">0x1d9a9</span> + flag[<span class="number">23</span>] * <span class="number">0x28df</span> + flag[<span class="number">12</span>] * <span class="number">0xfffc89eb</span> + flag[<span class="number">10</span>] * <span class="number">0xfffe1221</span> + flag[<span class="number">7</span>] * <span class="number">0x4462a</span> + flag[<span class="number">19</span>] * <span class="number">0x23353</span> + flag[<span class="number">21</span>] * <span class="number">0x3c514</span> + flag[<span class="number">0</span>] * <span class="number">0x316a4</span> + flag[<span class="number">11</span>] * <span class="number">0x176e1</span> + flag[<span class="number">20</span>] * <span class="number">0xcf0e</span> + flag[<span class="number">18</span>] * <span class="number">0x46b55</span> + flag[<span class="number">24</span>] * <span class="number">0xffffbcc1</span> + flag[<span class="number">17</span>] * <span class="number">0xf2a7</span> + flag[<span class="number">16</span>] * <span class="number">0x1d33c</span> - <span class="number">0x5df35b6</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">3</span>] * <span class="number">0xfffbf624</span> + flag[<span class="number">22</span>] * <span class="number">0xfffec87a</span> + flag[<span class="number">2</span>] * <span class="number">0x19aaa</span> + flag[<span class="number">23</span>] * <span class="number">0x5f14</span> + flag[<span class="number">20</span>] * <span class="number">0xfffcfc43</span> + flag[<span class="number">16</span>] * <span class="number">0xfffbe879</span> + flag[<span class="number">15</span>] * <span class="number">0xfffdfc92</span> + flag[<span class="number">14</span>] * <span class="number">0xffffc258</span> + flag[<span class="number">0</span>] * <span class="number">0xfffd02fd</span> + flag[<span class="number">5</span>] * <span class="number">0x12560</span> + flag[<span class="number">13</span>] * <span class="number">0xae46</span> + flag[<span class="number">7</span>] * <span class="number">0xfffeb6f5</span> + flag[<span class="number">12</span>] * <span class="number">0x30c11</span> + flag[<span class="number">17</span>] * <span class="number">0xfffcb4ae</span> + flag[<span class="number">24</span>] * <span class="number">0x2a00a</span> + flag[<span class="number">6</span>] * <span class="number">0xfffc76de</span> + flag[<span class="number">21</span>] * <span class="number">0x4162</span> + flag[<span class="number">10</span>] * <span class="number">0xfffe95b2</span> + flag[<span class="number">25</span>] * <span class="number">0xfffe60e7</span> + flag[<span class="number">19</span>] * <span class="number">0xffff908d</span> + flag[<span class="number">4</span>] * <span class="number">0xfffb7f42</span> + flag[<span class="number">11</span>] * <span class="number">0x1c31</span> + flag[<span class="number">1</span>] * <span class="number">0xffff900c</span> + flag[<span class="number">8</span>] * <span class="number">0x2ad6e</span> + flag[<span class="number">9</span>] * <span class="number">0xfffd7c6d</span> + flag[<span class="number">18</span>] * <span class="number">0xc499</span> + <span class="number">0x83646cd</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">12</span>] * <span class="number">0x26b02</span> + flag[<span class="number">3</span>] * <span class="number">0xfffb92e5</span> + flag[<span class="number">17</span>] * <span class="number">0x30dd1</span> + flag[<span class="number">18</span>] * <span class="number">0xfffe4c7b</span> + flag[<span class="number">0</span>] * <span class="number">0xffff0433</span> + flag[<span class="number">1</span>] * <span class="number">0x276b1</span> + flag[<span class="number">9</span>] * <span class="number">0xfffc241e</span> + flag[<span class="number">5</span>] * <span class="number">0xfffe3fdc</span> + flag[<span class="number">8</span>] * <span class="number">0xfffee787</span> + flag[<span class="number">10</span>] * <span class="number">0x230c</span> + flag[<span class="number">21</span>] * <span class="number">0xfffd53f8</span> + flag[<span class="number">4</span>] * <span class="number">0xfffc108c</span> + flag[<span class="number">14</span>] * <span class="number">0xffffbac1</span> + flag[<span class="number">26</span>] * <span class="number">0xffff0bdb</span> + flag[<span class="number">15</span>] * <span class="number">0xfffbc5e2</span> + flag[<span class="number">19</span>] * <span class="number">0xa1f6</span> + flag[<span class="number">16</span>] * <span class="number">0x1e758</span> + flag[<span class="number">22</span>] * <span class="number">0x1725f</span> + flag[<span class="number">23</span>] * <span class="number">0x3387e</span> + flag[<span class="number">20</span>] * <span class="number">0x87b</span> + flag[<span class="number">2</span>] * <span class="number">0xfffd8475</span> + flag[<span class="number">13</span>] * <span class="number">0x3776a</span> + flag[<span class="number">24</span>] * <span class="number">0xffff4515</span> + flag[<span class="number">11</span>] * <span class="number">0x1a454</span> + flag[<span class="number">6</span>] * <span class="number">0xfffbf3a1</span> + flag[<span class="number">25</span>] * <span class="number">0x25174</span> + flag[<span class="number">7</span>] * <span class="number">0xfffbccc2</span> + <span class="number">0x52dfb3f</span> == <span class="number">0</span>)</span><br><span class="line">solver.add(flag[<span class="number">25</span>] * <span class="number">0x2f139</span> + flag[<span class="number">20</span>] * <span class="number">0x21b53</span> + flag[<span class="number">15</span>] * <span class="number">0x2ad74</span> + flag[<span class="number">9</span>] * <span class="number">0xfffba19b</span> + flag[<span class="number">16</span>] * <span class="number">0x1ac4e</span> + flag[<span class="number">27</span>] * <span class="number">0x2208e</span> + flag[<span class="number">13</span>] * <span class="number">0xfffdd738</span> + flag[<span class="number">11</span>] * <span class="number">0xfffdfb9f</span> + flag[<span class="number">8</span>] * <span class="number">0xfffe4b65</span> + flag[<span class="number">5</span>] * <span class="number">0x10937</span> + flag[<span class="number">10</span>] * <span class="number">0xfffbfdf3</span> + flag[<span class="number">12</span>] * <span class="number">0x3cc1a</span> + flag[<span class="number">23</span>] * <span class="number">0xfffe93ee</span> + flag[<span class="number">2</span>] * <span class="number">0xfffe3b8a</span> + flag[<span class="number">14</span>] * <span class="number">0xfffe792c</span> + flag[<span class="number">6</span>] * <span class="number">0x3e9ff</span> + flag[<span class="number">21</span>] * <span class="number">0x128e6</span> + flag[<span class="number">3</span>] * <span class="number">0x574b</span> + flag[<span class="number">24</span>] * <span class="number">0x16707</span> + flag[<span class="number">19</span>] * <span class="number">0x3fe4c</span> + flag[<span class="number">17</span>] * <span class="number">0xfffed658</span> + flag[<span class="number">7</span>] * <span class="number">0x3cc8c</span> + flag[<span class="number">22</span>] * <span class="number">0x458b4</span> + flag[<span class="number">1</span>] * <span class="number">0xfffd74d0</span> + flag[<span class="number">18</span>] * <span class="number">0x22e02</span> + flag[<span class="number">4</span>] * <span class="number">0xffff098d</span> + flag[<span class="number">0</span>] * <span class="number">0x30b99</span> + flag[<span class="number">26</span>] * <span class="number">0xfffba5e9</span> - <span class="number">0x38186f4</span> == <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">flag_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> solver.check() == sat:</span><br><span class="line">    m = solver.model()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x1c</span>):</span><br><span class="line">        flag_str += <span class="built_in">chr</span>(m[flag[i]].as_long())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag_str)</span><br><span class="line"></span><br><span class="line"><span class="comment">#flag&#123;U_90t_th3_8451c_53cre7&#125;</span></span><br></pre></td></tr></table></figure><p>这种单步调试的方法很慢而且容易出错，后面看wp时看到了一个解决方法，直接写python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idaapi <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ida_ua <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> keystone <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> capstone <span class="keyword">import</span> *</span><br><span class="line">ks = Ks(KS_ARCH_X86, KS_MODE_32)</span><br><span class="line">cs = Cs(CS_ARCH_X86, CS_MODE_32)</span><br><span class="line">insn = insn_t()</span><br><span class="line">b = <span class="built_in">bytearray</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dis</span>(<span class="params">bytecode, address</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> cs.disasm(bytecode, address):</span><br><span class="line">        res = i.mnemonic + <span class="string">&#x27; &#x27;</span> + i.op_str</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_valid_code</span>(<span class="params">addr</span>):</span><br><span class="line">    <span class="keyword">global</span> b</span><br><span class="line">    func_ea = addr</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        s = GetDisasm(func_ea) <span class="comment"># 获取当前指令</span></span><br><span class="line">        <span class="keyword">if</span> s == <span class="string">&#x27;pushf&#x27;</span>: <span class="comment"># 获取dispatcher结果</span></span><br><span class="line">            <span class="comment"># pushf -&gt; pusha -&gt; mov -&gt; call -&gt; pop</span></span><br><span class="line">            l = decode_insn(insn, func_ea)</span><br><span class="line">            func_ea += l <span class="comment"># jmp pushf</span></span><br><span class="line">            l = decode_insn(insn, func_ea)</span><br><span class="line">            func_ea += l <span class="comment"># jmp pusha</span></span><br><span class="line">            <span class="comment"># mov</span></span><br><span class="line">            opcode = get_operand_value(func_ea, <span class="number">1</span>)</span><br><span class="line">            reg = get_operand_value(func_ea, <span class="number">0</span>)</span><br><span class="line">            l = decode_insn(insn, func_ea)</span><br><span class="line">            func_ea += l <span class="comment"># jmp mov</span></span><br><span class="line">            call_func_ea = get_operand_value(func_ea, <span class="number">0</span>)</span><br><span class="line">            l = decode_insn(insn, func_ea)</span><br><span class="line">            func_ea += l <span class="comment"># jmp call</span></span><br><span class="line">            l = decode_insn(insn, func_ea)</span><br><span class="line">            func_ea += l <span class="comment"># jmp pop</span></span><br><span class="line">            <span class="comment">#print(hex(call_func_ea))</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>: <span class="comment"># 找到对应分支</span></span><br><span class="line">               s = GetDisasm(call_func_ea)</span><br><span class="line">               <span class="keyword">if</span> s[:<span class="number">3</span>] == <span class="string">&#x27;cmp&#x27;</span>:</span><br><span class="line">                   cmp_opcode = get_operand_value(call_func_ea, <span class="number">1</span>)</span><br><span class="line">                   cmp_reg = get_operand_value(call_func_ea, <span class="number">0</span>)</span><br><span class="line">                   <span class="keyword">if</span> cmp_opcode == opcode <span class="keyword">and</span> cmp_reg == reg: <span class="comment"># find!</span></span><br><span class="line">                       l = decode_insn(insn, call_func_ea)</span><br><span class="line">                       call_func_ea += l <span class="comment"># jmp cmp</span></span><br><span class="line">                       <span class="keyword">break</span></span><br><span class="line">               length = decode_insn(insn, call_func_ea) <span class="comment"># 获取指令长度</span></span><br><span class="line">               call_func_ea += length</span><br><span class="line">            <span class="comment"># cmp -&gt; jnz -&gt; popa -&gt; popf -&gt; valid code</span></span><br><span class="line">            <span class="comment">#print(hex(opcode))</span></span><br><span class="line">            l = decode_insn(insn, call_func_ea)</span><br><span class="line">            call_func_ea += l <span class="comment"># jmp jnz</span></span><br><span class="line">            l = decode_insn(insn, call_func_ea)</span><br><span class="line">            call_func_ea += l <span class="comment"># jmp popa</span></span><br><span class="line">            l = decode_insn(insn, call_func_ea)</span><br><span class="line">            call_func_ea += l <span class="comment"># jmp popf</span></span><br><span class="line">            <span class="comment"># jump to valid code</span></span><br><span class="line">            s = GetDisasm(call_func_ea)</span><br><span class="line">            <span class="keyword">if</span> s == <span class="string">&#x27;pushf&#x27;</span>:</span><br><span class="line">                <span class="comment"># retn</span></span><br><span class="line">                b += <span class="string">b&#x27;\xC3&#x27;</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                s = GetDisasm(call_func_ea)</span><br><span class="line">                <span class="comment">#print(s)</span></span><br><span class="line">                <span class="keyword">if</span> s[:<span class="number">3</span>] == <span class="string">&#x27;jmp&#x27;</span>:</span><br><span class="line">                   <span class="comment"># retn</span></span><br><span class="line">                   <span class="keyword">break</span></span><br><span class="line">                <span class="comment"># get valid code</span></span><br><span class="line">                length = decode_insn(insn, call_func_ea) <span class="comment"># 获取指令长度</span></span><br><span class="line">                <span class="comment">#print(length,hex(call_func_ea))</span></span><br><span class="line">                disas = dis(get_bytes(call_func_ea, length), call_func_ea)</span><br><span class="line">                b += <span class="built_in">bytes</span>(ks.asm(disas, call_func_ea)[<span class="number">0</span>])</span><br><span class="line">                call_func_ea += length</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># 正常代码</span></span><br><span class="line">            length = decode_insn(insn, func_ea) <span class="comment"># 获取指令长度</span></span><br><span class="line">            disas = dis(get_bytes(func_ea, length), func_ea)</span><br><span class="line">            b += <span class="built_in">bytes</span>(ks.asm(disas, func_ea)[<span class="number">0</span>])</span><br><span class="line">            func_ea += length</span><br><span class="line">            <span class="keyword">if</span> s == <span class="string">&#x27;retn&#x27;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">valic_code_addr = <span class="number">0x8C100</span></span><br><span class="line">get_valid_code(<span class="number">0x48F4</span>)</span><br><span class="line">get_valid_code(<span class="number">0x48C8</span>)</span><br><span class="line">get_valid_code(<span class="number">0x3FBF</span>)</span><br><span class="line">get_valid_code(<span class="number">0x3F1B</span>)</span><br><span class="line">get_valid_code(<span class="number">0x4148</span>)</span><br><span class="line">get_valid_code(<span class="number">0x750A9</span>)</span><br><span class="line">get_valid_code(<span class="number">0x33EC</span>)</span><br><span class="line">patch_bytes(valic_code_addr, <span class="built_in">bytes</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;done!&#x27;</span>)</span><br></pre></td></tr></table></figure><p>具体可以参考<a href="https://www.bilibili.com/video/BV1Wt4y137qG?spm_id_from=333.999.0.0&vd_source=a6399ceb541c152f6fdd163573a7e845">【CTF&amp;WP】2022强网杯Reverse——find_basic_哔哩哔哩_bilibili</a></p><p><a href="https://www.xl-bit.cn/index.php/archives/839/">2022–第六届“强网杯”全国网络安全挑战赛—WriteUp - Bit’s Blog (xl-bit.cn)</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
